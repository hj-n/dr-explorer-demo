{"version":3,"sources":["json sync /^/.//.*_points/.json$","json sync /^/.//.*_shepard/.json$","json sync /^/.//.*_edges/.json$","json sync /^/.//.*_missing_points/.json$","assets/mnist_sampled_10_pca.png","assets/mnist_sampled_10_umap.png","assets/mnist_sampled_10_tsne.png","components/Bottom-BarChart.js","components/Left-BasicInfo.js","components/Left-Control.js","components/Detail-Shepard.js","components/Detail-BarChart.js","components/Compare-Component.js","components/CompareView.js","components/Explorer-new.js","components/Right-Repository.js","App.js","reportWebVitals.js","index.js","assets/mnist_sampled_10_isomap.png"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","xAxis","yAxis","x","y","series","svgLeft","svgRight","tooltipLeft","tooltipRight","BasicInfoTab","props","df_name","dataset","emb_name","method","emb_params","spacing","num","txt","parse","className","style","height","width","overflow","toUpperCase","isLabel","colorScale","d3","label_data","require","Array","from","Set","d","label","sort","a","b","items","length","push","display","marginBottom","backgroundColor","fontSize","labelChart","obj","printParam","ControlTab","df_filename","emb_filename","slice","pointsData","buildFileSelector","fileSelector","document","createElement","setAttribute","input_original","input_emb","handleChange","marginTop","onClick","preventDefault","click","onSubmit","alert","state","value","paddingBottom","margin","type","name","onChange","marginLeft","align","ShepardDiagram","jsonFileName","distance_data","plotHeight","xLabels","useState","fill","_","i","yLabels","xLabelsVisibility","matrix","current","j","useEffect","shepardAxisSvg","domain","range","append","attr","call","position","transform","xLabelsLocation","xLabelWidth","yLabelWidth","data","squares","cellStyle","background","min","max","color","cellRender","BarChart","option","setOption","threshold","setThreshold","countLabel","df","count","sumLabel","df_label","df_value","target_label","sum","NaN","parseFloat","point_data","toString","false_data","false","missing_data","missing","label_list","filter","React","activeSeriesIndex","activeDatumIndex","setState","useMemo","axes","primary","stacked","show","hardMin","getSeriesStyle","useCallback","index","opacity","getDatumStyle","datum","r","seriesIndex","otherHovered","onFocus","focused","event","target","toFixed","tooltip","renderSVG","CompareViewComponent","compareSvg","compareSvgPoints","coor","minX","maxX","minY","maxY","xScale","yScale","selectAll","join","enter","text","on","this","selection","console","log","setMainMethod","select","remove","update","points","radius","missingPoints","CompareView","methods","tooltipMaxLen","BottomBarChart","isCountLeft","setCountLeft","isVisible","setVisible","isCountRight","setCountRight","res","reduce","cnt_data","val_data","series_cnt_left","series_val_left","forEach","n","v","key","seriesc_cnt_right","series_val_right","padding","values","isNaN","g","tickSizeOuter","bandwidth","contours","querySelector","querySelectorAll","c","offsetX","offsetY","category","parseInt","getTitle","getTitleRight","class","visibility","ExplorerNew","svgContour","svgContourPoints","svgMainView","gMainView","svgMiniMap","gBrush","miniContourPoints","svgs","edgesData","missingPointsData","knnData","acc","val","start","end","ratio","strokeWidth","stroke","setUpdate","pointsIn","setPointsIn","missingPointsIn","setMissingPointsIn","isSelecting","useRef","isMakingContour","contour","getMissingEdgesInfo","missingPointsDict","edges","adjacentPoints","undefined","adjacentPoint","keyStr","incidentPoints","split","drawPlot","prefix","svg","svgEdges","svgPoints","showMissing","showFalse","first","second","lScale","aScale","bScale","scaleBivariate","false_val","missing_val","getTransformValue","tmp","includes","brush","extent","scale","x0","y0","moveX","moveY","drag","dragX","subject","dragY","transX","transY","move","renderMissingEdges","finalPointSelection","polygon","invert","inside","pointsInPolygon","currentDict","listLen","realX","realY","Math","abs","idx","newScale","newTransX","newTransY","wheelDelta","main_method","bottom","left","RepositoryTab","repo_dict","thumbnail","repo","src","default","alt","makeButtons","App","mainMethod","embedding_parameters","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","axios","defaults","xsrfCookieName","xsrfHeaderName","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a09683b6.chunk.js","sourcesContent":["var map = {\n\t\"./mnist_sampled_10_isomap_missing_points.json\": 66,\n\t\"./mnist_sampled_10_isomap_points.json\": 214,\n\t\"./mnist_sampled_10_pca_missing_points.json\": 67,\n\t\"./mnist_sampled_10_pca_points.json\": 215,\n\t\"./mnist_sampled_10_tsne_missing_points.json\": 68,\n\t\"./mnist_sampled_10_tsne_points.json\": 216,\n\t\"./mnist_sampled_10_umap_missing_points.json\": 69,\n\t\"./mnist_sampled_10_umap_points.json\": 217\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 14;","var map = {\n\t\"./mnist_sampled_10_isomap_shepard.json\": 219,\n\t\"./mnist_sampled_10_pca_shepard.json\": 220,\n\t\"./mnist_sampled_10_tsne_shepard.json\": 221,\n\t\"./mnist_sampled_10_umap_shepard.json\": 222\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 218;","var map = {\n\t\"./mnist_sampled_10_isomap_edges.json\": 227,\n\t\"./mnist_sampled_10_pca_edges.json\": 228,\n\t\"./mnist_sampled_10_tsne_edges.json\": 229,\n\t\"./mnist_sampled_10_umap_edges.json\": 230\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 226;","var map = {\n\t\"./mnist_sampled_10_isomap_missing_points.json\": 66,\n\t\"./mnist_sampled_10_pca_missing_points.json\": 67,\n\t\"./mnist_sampled_10_tsne_missing_points.json\": 68,\n\t\"./mnist_sampled_10_umap_missing_points.json\": 69\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 231;","export default __webpack_public_path__ + \"static/media/mnist_sampled_10_pca.45f130db.png\";","export default __webpack_public_path__ + \"static/media/mnist_sampled_10_umap.3ed76db7.png\";","export default __webpack_public_path__ + \"static/media/mnist_sampled_10_tsne.f0dd4400.png\";","import React, { useEffect, useState } from 'react';\n\nimport * as d3 from 'd3';\n\n\nlet xAxis, yAxis, x, y, series, svgLeft, svgRight, tooltipLeft, tooltipRight;\n\nconst width = 800;\nconst height = 150;\nconst margin = {top : 10, left : 60, bottom : 30, right : 30};\n\nconst tooltipMaxLen = 200;\n\n\n\n\nconst BottomBarChart = (props) => {\n\n    const [isCountLeft, setCountLeft] = useState(true);\n    const [isVisible, setVisible] = useState(false);\n    const [isCountRight, setCountRight] = useState(true);\n\n    const onChangeLeft = e => {\n        if (e.target.value == \"count\"){\n            setCountLeft(true);\n        }\n        else setCountLeft(false);\n    }\n\n    const onChangeRight = e => {\n        if (e.target.value == \"count\"){\n            setCountRight(true);\n        }\n        else setCountRight(false);\n    }\n    \n    const {data, label, points, update, colorScale} = props;\n    let {missingPoints} = props;\n    \n\n    const res = label.reduce((a,b)=> (a[b]=0,a),{});\n\n    let cnt_data = [{name: \"all\", ...res}, {name:\"false\", ...res, }, {name:\"missing\", ...res}];\n    let val_data = [{name:\"false\", ...res, }, {name:\"missing\", ...res}];\n\n    svgLeft = d3.select(\"#bottomBarChart\").attr(\"width\", `${width / 2}px`);\n    svgRight = d3.select(\"#bottomResultBarChart\").attr(\"width\", `${width / 2}px`);\n    \n    \n\n    useEffect(() => {\n        svgLeft.selectAll(\"g\").remove();\n        svgRight.selectAll(\"g\").remove();\n        setVisible(false);\n        if (update){\n            setVisible(true);\n\n            points.forEach(n => {\n                cnt_data[0][data[n].label] += 1;\n\n                if (data[n].missing > 0){ // missing\n                    val_data[1][data[n].label] += data[n].missing;\n                    cnt_data[2][data[n].label] += 1;\n                }\n                if (data[n].false > 0){ \n                    val_data[0][data[n].label] += data[n].false;\n                    cnt_data[1][data[n].label] += 1;\n                }\n            });\n\n            let series_cnt_left, series_val_left;\n            \n            series_cnt_left = d3.stack().keys(label)(cnt_data).map(d => (d.forEach(v => v.key = d.key), d));;\n            series_val_left = d3.stack().keys(label)(val_data).map(d => (d.forEach(v => v.key = d.key), d));;\n\n            \n            \n            const getTitle = (label, category) => {\n                if (category == \"all\"){\n                    let c = series_cnt_left[label][0];\n                    return (`Label : ${label}, Count : ${parseInt(c[1]-c[0])}`); // Label 1, Count : 10, Val : \n                }\n                else {\n                    let c = series_cnt_left[label][`${(category === \"false\"? 1 : 2)}`];\n                    let v = series_val_left[label][`${(category === \"false\"? 0 : 1)}`];\n                    return (`Label: ${label}, Count: ${parseInt(c[1] - c[0])}, Value : ${(v[1] - v[0]).toFixed(3)}`)\n                }\n\n            };\n            \n            x = d3.scaleLinear()\n                .range([margin.left, (width - margin.right) / 2]);\n\n                \n            y = d3.scaleBand()\n                .range([margin.top, height - margin.bottom])\n            .padding(`${isCountLeft? 0.08 : 0.2}`);\n\n                \n            if (isCountLeft) {\n                series = series_cnt_left;\n                x.domain([0,points.length]);\n                y.domain([\"missing\", \"false\", \"all\"])\n            }\n            else {\n                series = series_val_left;\n                x.domain([0, d3.max(val_data.map(d => Object.values(d).reduce((a, b) => a+(isNaN(parseFloat(b))?0:parseFloat(b)))))]);\n                y.domain([\"missing\", \"false\"])\n            }\n\n\n            xAxis = g => g\n                .attr(\"transform\", `translate(0,${height - margin.bottom})`)\n                .call(d3.axisBottom(x))\n\n            yAxis = g => g\n                .attr(\"transform\", `translate(${margin.left},0)`)\n                .call(d3.axisLeft(y).tickSizeOuter(0))\n                .call(g => g.selectAll(\".domain\").remove());\n\n            \n        // svg.attr(\"viewBox\", [0, 0, width, height]);\n// d : arr\n// 0: 122\n// 1: 137\n// data: {0: 31, 1: 0, 2: 16, 3: 40, 4: 0, 5: 27, 6: 8, 7: 0, 8: 15, 9: 0, name: \"all\"}\n// key: 8\n            svgLeft.append(\"g\")\n                .selectAll(\"g\")\n                .data(series)\n                .join(\"g\")\n                .attr(\"fill\", d => colorScale(d.key))\n                .selectAll(\"rect\")\n                .data(d => d)\n                .join(\"rect\")\n                .attr(\"x\", d => x(d[0]))\n                .attr(\"y\", (d, i) => y(d.data.name))\n                .attr(\"width\", d => x(d[1]) - x(d[0]))\n                .attr(\"height\", y.bandwidth())\n                .on(\"mouseover\", function(e, d) {\n                    tooltipLeft.style(\"display\", null); \n                    if (d.data.name === \"all\"){\n                        let contours = document.querySelector(`#scatterplot_contour_point_g_${props.dataset}_${props.method}`);\n                        contours.querySelectorAll(\"circle\").forEach(c => {c.style.opacity = 0.1;});\n                        contours.querySelectorAll(`.label${d.key}`).forEach(c => {c.style.opacity = 1;});\n                    }\n            })\n                .on(\"mouseout\", function(e,d) { tooltipLeft.style(\"display\", \"none\");\n                if (d.data.name === \"all\"){\n                    let contours = document.querySelector(`#scatterplot_contour_point_g_${props.dataset}_${props.method}`);\n                    contours.querySelectorAll(\"circle\").forEach(c => {c.style.opacity = 1;});\n                }\n            })\n                .on(\"mousemove\",function(e, d) {\n                    tooltipLeft.select(\"rect\").attr(\"width\",`${d.data.name === \"all\" ? 130 : tooltipMaxLen}`)\n                    tooltipLeft.attr(\"transform\", \n                        `translate(${d3.min([e.offsetX - 30, (width - margin.right ) / 2 - (d.data.name === \"all\" ? 130 : tooltipMaxLen)])},\n                        ${e.offsetY - 25} )`);\n                    tooltipLeft.select(\"text\").text(getTitle(d.key, d.data.name));\n                })\n                \n                svgLeft.append(\"g\")\n                    .attr(\"class\", \"x-axis\")\n                    .call(xAxis);\n\n                svgLeft.append(\"g\")\n                    .attr(\"class\", \"y-axis\")\n                    .call(yAxis);\n\n                tooltipLeft = svgLeft.append(\"g\")\n                .attr(\"class\", \"tooltip\")\n                .style(\"display\", \"none\");\n                      \n                tooltipLeft.append(\"rect\")\n                    .attr(\"height\", 20)\n                    .attr(\"fill\", \"white\")\n                    .style(\"opacity\", 0.5);\n                  \n                    tooltipLeft.append(\"text\")\n                    .attr(\"x\", 5)\n                    .attr(\"dy\", \"1.2em\")\n                    .style(\"text-anchor\", \"start\")\n                    .attr(\"font-size\", \"12px\")\n                    .attr(\"font-weight\", \"bold\");\n\n\n                missingPoints = Object.keys(missingPoints);\n                cnt_data = [{name:\"false\", ...res, }, {name:\"missing\", ...res}];\n                val_data = [{name:\"false\", ...res, }, {name:\"missing\", ...res}];\n\n                \n    missingPoints.forEach(n => {\n                        if (data[n].missing > 0){ // missing\n                            val_data[1][data[n].label] += data[n].missing;\n                            cnt_data[1][data[n].label] += 1;\n                        }\n                        if (data[n].false > 0){ \n                            val_data[0][data[n].label] += data[n].false;\n                            cnt_data[0][data[n].label] += 1;\n                        }\n                    });\n\n\n            let seriesc_cnt_right, series_val_right;\n                    \n            seriesc_cnt_right = d3.stack().keys(label)(cnt_data).map(d => (d.forEach(v => v.key = d.key), d));;\n            series_val_right = d3.stack().keys(label)(val_data).map(d => (d.forEach(v => v.key = d.key), d));;\n\n            \n            x = d3.scaleLinear()\n                .range([margin.left, (width - margin.right) / 2]);\n            \n            const getTitleRight = (label, category) => {\n                let c = seriesc_cnt_right[label][`${(category === \"false\"? 0 : 1)}`];\n                let v = series_val_right[label][`${(category === \"false\"? 0 : 1)}`];\n                return (`Label: ${label}, Count: ${parseInt(c[1] - c[0])}, Value : ${(v[1] - v[0]).toFixed(3)}`)\n\n            }\n\n            if (isCountRight) {\n                series = d3.stack()\n                .keys(label)(cnt_data)\n                .map(d => (d.forEach(v => v.key = d.key), d));\n                x.domain([0,missingPoints.length]);\n            }\n            else {\n                series = d3.stack()\n                .keys(label)(val_data)\n                .map(d => (d.forEach(v => v.key = d.key), d));\n                x.domain([0, d3.max(val_data.map(d => Object.values(d).reduce((a, b) => a+(isNaN(parseFloat(b))?0:parseFloat(b)))))]);\n            }\n\n            y = d3.scaleBand()\n                .domain([\"missing\", \"false\"])\n                .range([margin.top, height - margin.bottom])\n                .padding(0.2);\n\n\n            xAxis = g => g\n                .attr(\"transform\", `translate(0,${height - margin.bottom})`)\n                .call(d3.axisBottom(x))\n\n            yAxis = g => g\n                .attr(\"transform\", `translate(${margin.left},0)`)\n                .call(d3.axisLeft(y).tickSizeOuter(0))\n                .call(g => g.selectAll(\".domain\").remove());\n\n            \n        // svg.attr(\"viewBox\", [0, 0, width, height]);\n\n\n            svgRight.append(\"g\")\n                .selectAll(\"g\")\n                .data(series)\n                .join(\"g\")\n                .attr(\"fill\", d => colorScale(d.key))\n                .selectAll(\"rect\")\n                .data(d => d)\n                .join(\"rect\")\n                .attr(\"x\", d => x(d[0]))\n                .attr(\"y\", (d, i) => y(d.data.name))\n                .attr(\"width\", d => x(d[1]) - x(d[0]))\n                .attr(\"height\", y.bandwidth())\n                .on(\"mouseover\", function() { tooltipRight.style(\"display\", null); })\n                .on(\"mouseout\", function() { tooltipRight.style(\"display\", \"none\"); })\n                .on(\"mousemove\", function(e, d) {\n                    tooltipRight.attr(\"transform\", `translate(${d3.min([e.offsetX - 30, (width - margin.right ) / 2 - tooltipMaxLen])}, ${e.offsetY - 25} )`);\n                    tooltipRight.select(\"text\").text(getTitleRight(d.key, d.data.name));\n                })\n\n                svgRight.append(\"g\")\n                    .attr(\"class\", \"x-axis\")\n                    .call(xAxis);\n\n                svgRight.append(\"g\")\n                    .attr(\"class\", \"y-axis\")\n                    .call(yAxis);\n\n                    tooltipRight = svgRight.append(\"g\")\n                .attr(\"class\", \"tooltip\")\n                .style(\"display\", \"none\");\n                      \n                tooltipRight.append(\"rect\")\n                    .attr(\"width\", tooltipMaxLen)\n                    .attr(\"height\", 20)\n                    .attr(\"fill\", \"white\")\n                    .style(\"opacity\", 0.5);\n                  \n                    tooltipRight.append(\"text\")\n                    .attr(\"x\", 5)\n                    .attr(\"dy\", \"1.2em\")\n                    .style(\"text-anchor\", \"start\")\n                    .attr(\"font-size\", \"12px\")\n                    .attr(\"font-weight\", \"bold\");\n                    \n            \n        }\n    },[props.update, isCountLeft, isCountRight]);\n\n\n    return (\n        <div id=\"detailview\">\n            <div className=\"section-title bottom\" style={{width:`${(width / 2) - 140}px`, display:\"inline-block\"}}>Selected Points Label Distribution</div>\n            <select class=\"selection-info-view\" onChange={onChangeLeft} style={{visibility:`${isVisible? \"visible\":\"hidden\"}`}}>\n                <option value=\"count\">Count</option>\n                <option value=\"value\">Value</option>\n            </select>\n            <div className=\"section-title bottom\" style={{width:`${(width / 2) - 140}px`, display:\"inline-block\"}}>Missing Points Label Distribution</div>\n            <select class=\"selection-info-view\" onChange={onChangeRight} style={{visibility:`${isVisible? \"visible\":\"hidden\"}`}}>\n                <option value=\"count\">Count</option>\n                <option value=\"value\">Value</option>\n            </select>\n            <svg id=\"bottomBarChart\"></svg>\n            <svg id=\"bottomResultBarChart\"></svg>\n        </div>\n    )\n    \n};\n\nexport default BottomBarChart;","import React, { useState } from 'react';\nimport * as d3 from 'd3';\nimport parse from 'html-react-parser';\n\nconst BasicInfoTab = (props) => {\n\n  const df_name = props.dataset;\n  const emb_name = props.method;\n  const emb_params = props.emb_params;\n  \n  function labelChart(){\n    if (props.isLabel){\n      let colorScale = d3.scaleOrdinal(d3.schemeCategory10);\n      let label_data = require(\"../json/\" + props.dataset + \"_\" + props.method + \"_points.json\");\n      label_data = Array.from(new Set(label_data.map((d) => d.label))).sort((a,b)=> a - b);\n      \n      const items = [];\n      for (let x=0; x<label_data.length; x++){\n        items.push(\n          <div style={{display: \"flex\", marginBottom: \"3px\"}}>\n            <rect style={{height: \"15px\", width: \"50px\", backgroundColor: colorScale(x)}}></rect>\n            <div style={{height: \"15px\", fontSize: \"15px\"}}>&nbsp;&nbsp;:&nbsp;&nbsp;{label_data[x]}</div>\n          </div>\n        )\n      }\n      return items;\n    }\n    else{ \n      return (<div>-</div>);\n    }\n  }\n\n  function printParam(obj) {\n    const items = [];\n    for (let x in obj){\n      items.push(\n        <div>\n          {x}&nbsp;&nbsp;:&nbsp;&nbsp;{obj[x]}\n        </div>\n      )\n    }\n    return items;\n  }\n\n  function spacing(num) {\n    let txt = '';\n    for (let x = 0; x < num; x++){\n      txt+= \"&nbsp;\"\n    }\n    return parse(txt);\n  }\n\n  return (\n    <div id=\"basic-info\" className='Tab'>\n       <div className=\"tab-title\">\n       Basic Information\n       </div>\n      <div className=\"keyword\">\n        <b>DATASET{spacing(5)}</b>\n        <div style={{height:'20px',width:'220px',overflow:'auto'}}>{df_name.toUpperCase()}</div>\n      </div>\n      <div className=\"keyword\">\n        <b>EMBEDDING{spacing(5)}</b>\n        <div style={{height:'20px',width:'200px',overflow:'auto'}}>{emb_name.toUpperCase()}</div>\n      </div>\n\n      <div className=\"two-cols\">\n        <div id=\"header\" className=\"column1\">Label Color</div>\n        <div id=\"header\" className=\"column2\">Model Parameter</div>\n      </div>\n\n      <div className=\"two-cols\">\n        <div className=\"column1\" style={{height:'85px',overflow:'auto'}}>\n          {labelChart()}\n        </div>\n        <div className=\"column2\" style={{height:'85px',overflow:'auto'}}>\n          {printParam(emb_params)}\n        </div>\n      </div>\n    </div>\n  );\n\n\n}\n\nexport default BasicInfoTab;","import React, { useState } from 'react';\nimport parse from 'html-react-parser';\n\n\nconst ControlTab = (props) => {\n\n  let df_filename = props.dataset + \"_original.json\";\n  let emb_name = props.method;\n  let emb_params = props.emb_params;\n  let emb_filename = props.dataset + \"_\" + props.method + \"_points(\";\n  for (let x in emb_params){\n    emb_filename += emb_params[x] + \"_\";\n  } emb_filename = emb_filename.slice(0,-1) + \").json\";\n\n  let label_data;\n  if (props.isLabel){\n    let pointsData = require(\"../json/\" + props.dataset + \"_\" + props.method + \"_points.json\");\n    label_data = Array.from(new Set(pointsData.map((d) => d.label))).sort((a,b)=> a - b);\n  }else{ label_data = 'not-exist'; }\n\n  const printParam = (obj) => {\n    const items = [];\n    for (let x in obj){\n      items.push(\n        <div style={{display: \"flex\", paddingBottom:\"5px\"}}>\n          <div style={{width: \"90px\", margin: \"0 10px\"}}>{x}</div>\n          <input type = \"text\" name = {x} value = {obj[x]} onChange={handleChange}/><br/>\n        </div>\n      )\n    }\n    return items;\n  }\n  \n  const spacing = (num) => {\n    let txt = '';\n    for (let x = 0; x < num; x++){\n      txt+= \"&nbsp;\"\n    }\n    return parse(txt);\n  }\n  \n  function buildFileSelector(){\n    const fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n    fileSelector.setAttribute('multiple', 'multiple');\n    return fileSelector;\n  }\n  const input_original = buildFileSelector();\n  const input_emb = buildFileSelector();\n  \n\n  const onClickData = (e) => {\n    e.preventDefault();\n    input_original.click();\n  }\n  const onClickMeta = (e) => {\n    e.preventDefault();\n    input_emb.click();\n  }\n  const onClickEmb = (e) => {\n    e.preventDefault();\n    input_emb.click();\n  }\n  const handleChange = (e) => {\n    //\n  }\n  const handleSubmit = (e) => {\n    alert('A name was submitted: ' + this.state.value);\n    e.preventDefault();\n  }\n\n  return (\n    <div id=\"control\" className='Tab'>\n        <div className=\"tab-title\">\n        Control\n        </div>\n      <div className=\"keyword\">\n        <b style={{marginTop:'4px', height:'20px', width:'120px'}}>DATASET</b>\n        <button onClick={onClickData} style={{width:'200px'}}>Load Original Data</button>\n      </div>\n      <div className=\"data\"  style={{height:'30px',width:'310px',overflow:'auto', fontSize:'15px'}}>\n        <div>{`file${spacing(2)}:${spacing(2)}${df_filename}`}</div>\n      </div>\n\n      \n      <div className=\"keyword\">\n        <b style={{marginTop:'4px', height:'20px', width:'120px'}}>EMBEDDING</b>\n      </div>\n      <div className=\"keyword\">\n        <button onClick={onClickMeta}>Load Meta Data</button>\n        {spacing(2)}\n        <button onClick={onClickEmb}>Load Embedding Data</button>\n      </div>\n      <div className=\"data\"  style={{height:'30px',width:'310px',overflow:'auto', fontSize:'15px'}}>\n      {`file${spacing(2)}:${spacing(3)}${emb_filename}`}</div>\n\n      <div>\n        <form onSubmit={handleSubmit}>\n          {printParam(emb_params)}\n          <div style={{marginLeft:\"175px\"}}>\n            <input type=\"reset\" value=\"Reset\" align=\"right\"/>{spacing(2)}\n            <input type=\"submit\" value=\"Submit\" align=\"right\"/>\n          </div>\n        </form>    \n      </div>\n    </div>\n  );\n\n}\n\nexport default ControlTab;","import React, { useEffect, useState } from 'react';\nimport HeatMap from 'react-heatmap-grid';\nimport * as d3 from 'd3';\n\n\nconst ShepardDiagram = (props) => {\n  let jsonFileName = props.dataset + \"_\" + props.method;\n  // jsonFileName = \"mnist_sampled_50_pca\"\n  let distance_data = require(\"../json/\" + jsonFileName + \"_shepard.json\");\n  // let dist_orig = Object.values(distance_data.dist_orig);\n  // let dist_emb = Object.values(distance_data.dist_emb);\n\n\n  const N = 20; const plotHeight= 190;\n  const xLabels = useState(new Array(N).fill(0).map((_, i) => `${i}`))[0];\n  const yLabels = useState(new Array(N).fill(''))[0];\n  const xLabelsVisibility = new Array(N).fill(false);\n\n  // const shepardMatrix = (dist_orig, dist_emb) => {\n  //   let shepard_data = new Array(N).fill(0).map(() => new Array(N).fill(0));\n  //   let xmin=Math.min.apply(null, dist_orig); let xdel=Math.max.apply(null, dist_orig) - xmin + 1e-10; \n  //   let ymin=Math.min.apply(null, dist_emb); let ydel=Math.max.apply(null, dist_emb) - ymin + 1e-10; \n  //   let m,n;\n  //   for (let i=0; i<dist_emb.length; i++){\n  //     m = Math.floor((dist_orig[i]-xmin) / xdel * N);\n  //     n = Math.floor((dist_emb[i]-ymin) / ydel * N);\n  //     shepard_data[m][n] += 1;\n  //   }\n  //   return shepard_data;\n  // };\n  let matrix = [];\n  for (let i = 0; i < 20; i++) {\n    let current = []\n    for (let j = 0; j < 20; j++) {\n      current.push(distance_data[i + \"_\" + j])\n    }\n    matrix.push(current)\n  }\n  // console.log(shepardMatrix(dist_orig, dist_emb))\n\n  // const onClick = (x, y) => alert(`Clicked ${x}, ${y}.`)\n  \n  const cellStyle = (background, value, min, max, data, x, y) => ({\n    background: `rgb(25, 25, 112, ${1 - (max - value) / (max - min)})`,\n    fontSize: \"5px\",\n    color: \"#444\",\n    margin: 0\n  });\n\n  const cellRender = (value) => {}\n\n\n  useEffect(() => {\n\n\n    let shepardAxisSvg = d3.select(\"#shepard-axis\")\n    let xAxis = d3.axisBottom(d3.scaleLinear().domain([0, 1]).range([0, plotHeight]));\n\n    shepardAxisSvg.append(\"g\") \n                  .attr(\"transform\", `translate(30, ${plotHeight+30})`)\n                  .call(xAxis)\n    \n    let yAxis = d3.axisLeft(d3.scaleLinear().domain([0, 1]).range([plotHeight, 0]));\n\n\n    shepardAxisSvg.append(\"g\")\n                  .attr(\"transform\", \"translate(30,30)\")\n                  .call(yAxis)\n  }, [])\n\n  const shepardContainerStyle = {\n\n  };\n\n  \n\n\n  return (\n    <div name=\"heatmap\" className='Shepard' style={shepardContainerStyle}>\n      <div className=\"section-title\">\n                    Shepard Diagram</div>\n      \n      <svg id={\"shepard-axis\"} style={{position: 'absolute'}} \n        transform={\"translate(-30, -30)\"} height={plotHeight+50} width={plotHeight+40}> \n      </svg>\n      <div>\n        <HeatMap name=\"plot\"\n          // background={\"#329fff\"}\n          xLabels={xLabels}\n          yLabels={yLabels}\n          xLabelsLocation={\"bottom\"} xLabelsVisibility={xLabelsVisibility}\n          xLabelWidth={0} yLabelWidth={0}\n          data={matrix}\n          // onClick={onClick}\n          squares={true}\n          height={plotHeight/N}\n          cellStyle={cellStyle}\n          cellRender={cellRender}\n      />\n      </div>\n      \n    </div>\n  );\n\n\n};\n\n\nexport default ShepardDiagram;","import React, { useEffect, useState }  from 'react';\nimport { Chart } from \"react-charts\";\nimport parse from 'html-react-parser';\n// import * as d3 from 'd3';\n\n\nconst BarChart = (props) => {\n  let jsonFileName = props.dataset + \"_\" + props.method;\n  const [option, setOption] = useState(props.option);\n  const [threshold, setThreshold] = useState(props.threshold);\n\n  function countLabel(df, d) {\n    let count = 0;\n    for (let i in df){ if (d === df[i]) count++;}\n    return count;\n  };\n  function sumLabel(df_label, df_value, target_label) {\n    let sum = 0;\n    if (df_value === NaN){\n      for (let i in df_label){ \n        if (df_label[i] === target_label) sum += parseFloat(df_value[i]);\n      }\n    }else{\n      for (let i in df_label){ \n        if (df_label[i] === target_label & df_value[i] > (threshold/100)) sum += parseFloat(df_value[i]);\n      }\n    }\n    return sum;\n  };\n\n  let data;\n  let point_data = require(\"../json/\" + jsonFileName + \"_points.json\");\n  let label_data = point_data.map((d) => d.label.toString());\n  let false_data = point_data.map((d) => d.false.toString());\n  let missing_data = point_data.map((d) => d.missing.toString());\n  const label_list = Array.from(new Set(label_data)).sort((a,b)=> a - b);\n\n  if (option==='count'){\n    data = label_list.map((d) => { \n      return {\n        label: d,\n        data: [\n          {x:\"All\", y: countLabel(label_data, d)}, \n          {x:\"Missing\", y: countLabel(label_data.filter((d,i) => missing_data[i] > (threshold/100)), d)}, \n          {x:\"False\", y: countLabel(label_data.filter((d,i) => false_data[i] > (threshold/100)), d)},\n        ]};\n    });\n  }\n  else{ // if option === \"sum\"\n    data = label_list.map((d) => { \n      return {\n        label: d,\n        data: [\n          {x: \"All\", y: 0.0}, \n          {x: \"Missing\", y: sumLabel(label_data, missing_data, d)}, \n          {x: \"False\", y: sumLabel(label_data, false_data, d)},\n        ]};\n    });\n  }\n\n  function handleOption(event) {\n    setOption(event.target.value);\n  }\n  function handleThreshold(event) {\n    setThreshold(event.target.value);\n  }\n\n\n  const [{ activeSeriesIndex, activeDatumIndex }, setState] = React.useState({\n    activeSeriesIndex: -1,\n    activeDatumIndex: -1\n  });\n\n  const series = React.useMemo(\n    () => ({\n      type: \"bar\"\n    }),\n    [\"bar\"]\n  );\n\n  const axes = React.useMemo(\n    () => [\n      { primary: true, type: \"ordinal\", position: \"bottom\"},\n      { type: \"linear\", position: \"left\", stacked: false, show: false, hardMin:0}\n    ],\n    []\n  );\n\n  const getSeriesStyle = React.useCallback(\n    series => ({\n      color: `url(#${series.index % label_list.length})`,\n      opacity:\n        activeSeriesIndex > -1\n          ? series.index === activeSeriesIndex\n            ? 1\n            : 0.3\n          : 1\n    }),\n    [activeSeriesIndex]\n  );\n\n  const getDatumStyle = React.useCallback(\n    datum => ({\n      r:\n        activeDatumIndex === datum.index && activeSeriesIndex === datum.seriesIndex\n          ? 7\n          : activeDatumIndex === datum.index\n          ? 5\n          : datum.series.index === activeSeriesIndex\n          ? 3\n          : datum.otherHovered\n          ? 2\n          : 2\n    }),\n    [activeDatumIndex, activeSeriesIndex]\n  );\n\n  const onFocus = React.useCallback(\n    focused =>\n      setState({\n        activeSeriesIndex: focused ? focused.series.id : -1,\n        activeDatumIndex: focused ? focused.index : -1\n      }),\n    [setState]\n  );\n\n  const colorScale = props.colorScale;\n  function renderSVG() {\n    let txt = \"<defs>\";\n    for (let i=0; i<label_list.length; i++){\n      txt += `<linearGradient id=\"${label_list[i]}\">`\n            + `<stop stop-color=\"${colorScale(i)}\"/>`\n            + \"</linearGradient>\";\n    }\n    txt += \"</defs>\"\n    return parse(txt);\n  }\n\n\n  return (\n    <div name=\"labelplot\" className='BarChart'>\n      <div style={{display:\"flex\"}}>\n        <input type=\"range\" min=\"0\" max=\"100\" value={threshold} onChange={handleThreshold} style={{width:\"80px\"}}/>\n        <div id=\"th-label\">{(threshold / 100).toFixed(2)}</div>\n        <select className=\"selection-info-view\" onChange={handleOption} style={{marginLeft:\"230px\"}}>\n        {/* <select id=\"selection-info-view\" onChange={handleOption} style={{marginLeft:\"420px\"}}> */}\n          <option value=\"count\">Count</option>\n          <option value=\"value\">Value</option>\n        </select>\n      </div>\n      <Chart data={data} series={series} axes={axes} tooltip \n        getSeriesStyle={getSeriesStyle}\n        getDatumStyle={getDatumStyle}\n        onFocus={onFocus}\n        setState={setState}\n        activeDatumIndex={activeDatumIndex}\n        activeSeriesIndex={activeSeriesIndex}\n        renderSVG = {renderSVG}\n      />\n    </div>\n  );\n\n\n};\n\n\n\nexport default BarChart;","import React, { useState, useEffect } from 'react'\nimport * as d3 from 'd3';\nimport { svg } from 'd3';\n\nconst CompareViewComponent = (props) => {\n\n    let jsonFileName = props.dataset + \"_\" + props.method;\n    let pointsData = require(\"../json/\" + jsonFileName + \"_points.json\");\n    // console.log(pointsData);\n    const colorScale = props.colorScale\n\n    const radius = 1;\n\n    let width = props.width\n    let height = props.height\n    const margin = { hor: 20, ver: 15 };\n\n    const [minX, maxX] = d3.extent(pointsData, d => d.coor[0]);\n    const [minY, maxY] = d3.extent(pointsData, d => d.coor[1]);\n\n    const xScale = d3.scaleLinear()\n                        .domain([minX, maxX])\n                        .range([0, width]);\n    \n    const yScale = d3.scaleLinear()\n                        .domain([minY, maxY])\n                        .range([0, height]);\n    \n    let compareSvg;\n    \n    let compareSvgPoints;\n    let svgSelectedPoints;\n    let svgHeighlightedPoints;\n\n        // changeMainMethod\n    function changeMainMethod() {\n\n        // console.log(props.setMainMethod(\"hi\"));\n        // props.setMainMethod(props.method);\n        console.log(props);\n        props.setMainMethod(props.method)\n        \n\n    }\n\n    \n\n    useEffect(() => {\n        compareSvg = d3.select(\"#\" + props.method+ \"_compare\")\n                            .attr(\"width\", width + margin.hor * 2)\n                            .attr(\"height\", height + margin.ver * 3);\n        \n        compareSvgPoints = compareSvg.append(\"g\")\n                                     .attr(\"id\", props.method+ \"_compare_points\")\n                                     .attr(\"transform\", \"translate(\" + margin.hor + \", \" + (margin.ver * 2) + \")\");\n        svgSelectedPoints = compareSvg.append(\"g\")\n                                      .attr(\"id\", props.method+ \"_compare_selected\")\n                                      .attr(\"transform\", \"translate(\" + margin.hor + \", \" + (margin.ver * 2) + \")\");\n        svgHeighlightedPoints = compareSvg.append(\"g\")\n                                          .attr(\"id\", props.method+ \"_compare_highlighted\")\n                                          .attr(\"transform\", \"translate(\" + margin.hor + \", \" + (margin.ver * 2) + \")\");\n        compareSvgPoints.selectAll(\"circle\")\n                        .data(pointsData)\n                        .join(\n                            enter => enter.append(\"circle\")\n                                        .attr(\"fill\", d => colorScale(d.label))\n                                        .style(\"opacity\", 0.4)\n                                        .attr(\"r\", radius)\n                                        .attr(\"cx\", d => xScale(d.coor[0]))\n                                        .attr(\"cy\", d => yScale(d.coor[1]))\n\n                        );\n\n        compareSvg.append(\"g\")\n                  .append(\"text\")\n                  .text(props.method.toUpperCase())\n                  .attr(\"font-size\", 13)\n                  .attr(\"font-weight\", 600)\n                  .attr(\"y\", 30)\n                  .attr(\"x\", 10)\n\n        d3.select(\"#\" + props.method + \"_compare\")\n            .on(\"mouseenter\", function() {\n                d3.select(this).append(\"rect\")\n                .attr(\"id\", \"select_rect_\" + props.method)\n                    .attr(\"fill\", \"none\")\n                    .attr(\"stroke\", \"black\")\n                    .attr(\"stroke-width\", 1)\n                    .attr(\"width\", props.width + margin.hor * 2)\n                    .attr(\"height\", props.width + margin.ver * 2.5)\n                    .attr(\"transform\", \"translate(0,\" + margin.ver * 0.5 + \")\")\n\n                let selection = d3.select(this)\n                  .append(\"g\")\n                  .attr(\"id\", \"select_\" + props.method);\n                selection.append(\"rect\")\n                  .attr(\"id\", \"rect_\" + props.method)\n                  .attr(\"transform\", \"translate(\" + (10) + \",\" + (props.height + 5) + \")\")\n                  .attr(\"width\", 160)\n                  .attr(\"height\", 30)\n                  .attr(\"rx\", 7)\n                  .attr(\"ry\", 7)\n                  .style(\"stroke\", \"black\")\n                  .attr(\"fill\", \"#eeeeee\")\n                selection\n                  .on(\"mouseenter\", function() {\n                      d3.select(\"#rect_\" + props.method)\n                        .style(\"stroke-wdith\", 2)\n                        .attr(\"fill\", \"#bbbbbb\")\n                  })\n                  .on(\"mouseleave\", function() {\n                    d3.select(\"#rect_\" + props.method)\n                      .style(\"stroke-wdith\", 1)\n                      .attr(\"fill\", \"#eeeeee\")\n                  })\n                  .on(\"mousedown\", function() {\n                      d3.select(\"#rect_\" + props.method)\n                      .style(\"stroke-wdith\", 1)\n                      .attr(\"fill\", \"#eeeeee\")\n                  })\n                  .on(\"mouseup\", function() {\n                    d3.select(\"#rect_\" + props.method)\n                      .style(\"stroke-wdith\", 2)\n                      .attr(\"fill\", \"#bbbbbb\")\n                  })\n                  .on(\"click\", function() {\n                      changeMainMethod();\n                  });\n\n                selection.append(\"text\")\n                         .attr(\"id\", \"text_\" + props.method)\n                         .attr(\"font-size\", 13)\n                         .attr(\"font-weight\", 300)\n                         .attr(\"transform\", \"translate(\" + (17) + \",\" + (props.height + 25) + \")\")\n                         .text(\"Set as Main Projection!!\")\n                         .style(\"user-select\", \"none\")\n\n                \n                // console.log(d3.select(\"#\" + props.method + \"compare_div\"))\n                // d3.select(this)\n                //   .append(\"button\")\n                //   .text(\"Set as Main Projection!!\")\n                //   .style(\"display\", \"block\")\n                //   .style(\"position\", \"relative\")\n                //   .style(\"top\", \"-30px\")\n                //   .style(\"left\", \"6px\")\n                //   .attr(\"onclick\", \"changeMainMethod()\")\n            })\n            .on(\"mouseleave\", function() {\n                d3.select(this).select(\"#select_rect_\" + props.method).remove();\n                d3.select(this).select(\"#select_\" + props.method).remove();\n\n                // d3.select(this)\n                //   .select(\"button\").remove();\n\n            })\n    }, [])\n\n    useEffect(() => {\n\n\n\n        if(props.update) {   // if new selection\n            d3.select(\"#\" + props.method+ \"_compare_selected\").selectAll(\"circle\")\n                             .data(props.points)\n                             .enter()\n                             .append(\"circle\")\n                             .attr(\"fill\", \"blue\")\n                             .attr(\"r\", radius *1.5)\n                             .attr(\"cx\", i => xScale(pointsData[i].coor[0]))\n                             .attr(\"cy\", i => yScale(pointsData[i].coor[1]));\n\n            d3.select(\"#\" + props.method+ \"_compare_highlighted\").selectAll(\"circle\")\n              .data(Object.keys(props.missingPoints))\n              .enter()\n              .append(\"circle\")\n              .attr(\"fill\", \"red\")\n              .attr(\"r\", radius * 2)\n              .attr(\"cx\", i => xScale(pointsData[i].coor[0]))\n              .attr(\"cy\", i => yScale(pointsData[i].coor[1]))\n              .style(\"opacity\", i => props.missingPoints[i])\n\n            \n        }\n        else {\n            d3.select(\"#\" + props.method+ \"_compare_selected\").selectAll(\"circle\").remove()\n            d3.select(\"#\" + props.method+ \"_compare_highlighted\").selectAll(\"circle\").remove()\n        }\n\n    }, [props.update])\n\n                                     \n    \n\n    \n\n\n\n    return (\n        <div id={props.method + \"_compare_div\"} style={{height: \"250px\"}}>\n            <svg id={props.method + \"_compare\"}>\n            </svg>\n        </div>\n    )\n}\n\nexport default CompareViewComponent;","import React, { useState, useEffect } from 'react'\n\nimport CompareViewComponent from './Compare-Component'\n\n\nconst CompareView = (props) => {\n\n    // LLE 추가하면 restore해야함 TODOTODOTODO\n    // const methods  = props.methods.filter(d => d !== props.main_method)\n    const methods = props.methods;\n\n    const compareWidth = 200;\n    const compareHeight = 200;\n\n    useEffect(() => {\n        // console.log(props.points);\n        // console.log(methods);\n    }, [props.update])\n\n\n    let titleStyle = {\n        \"marginTop\": 14,\n        \"fontWeight\": 600,\n        \"textAlign\": 'center'\n    }\n\n    let divStyle = {\n        \"paddingLeft\": 17\n    }\n\n    return (\n        <div style={divStyle}>\n            <div style={titleStyle}>Compare View</div>\n            <div style={{display: \"flex\"}}>\n            {methods.slice(0,2).map((method, i) => (\n                <CompareViewComponent\n                    method = {method}\n                    dataset = {props.dataset}\n                    points = {props.points}\n                    update = {props.update}\n                    width = {compareWidth}\n                    height = {compareHeight}\n                    colorScale = {props.colorScale}\n                    missingPoints = {props.missingPoints}\n                    setMainMethod = {props.setMainMethod}\n                />\n            ))}\n            </div>\n            <div style={{display: \"flex\"}}>\n            {methods.slice(2,4).map((method, i) => (\n                <CompareViewComponent\n                    method = {method}\n                    dataset = {props.dataset}\n                    points = {props.points}\n                    update = {props.update}\n                    width = {compareWidth}\n                    height = {compareHeight}\n                    colorScale = {props.colorScale}\n                    missingPoints = {props.missingPoints}\n                    setMainMethod = {props.setMainMethod}\n                />\n            ))}\n            </div>\n        </div>\n    )\n\n}\n\nexport default CompareView;","import React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport { color, precisionPrefix } from 'd3';\nimport inside from 'point-in-polygon'\nimport ShepardDiagram from './Detail-Shepard';\nimport BarChart from './Detail-BarChart';\nimport CompareView from \"./CompareView\";\nimport BottomBarChart from './Bottom-BarChart';\n\nconst ExplorerNew = (props) => {\n\n    let jsonFileName = props.dataset + \"_\" + props.method;\n    let pointsData = require(\"../json/\" + jsonFileName + \"_points.json\");\n    let edgesData = require(\"../json/\" + jsonFileName + \"_edges.json\");\n    let missingPointsData = require(\"../json/\" + jsonFileName + \"_missing_points.json\")\n    const label_data = Array.from(new Set(pointsData.map((d) => d.label))).sort((a,b)=> a - b);\n    // pointsData = pointsData.map((d, i) => {\n    //     return {\n    //         coor: d.coor,\n    //         lable: d.label,\n    //         idx: i\n    //     };\n    // });\n\n    let knnData = edgesData.reduce(function(acc, val) {\n        if (val.start in acc) acc[val.start].push(val.end);\n        else                  acc[val.start] = [val.end];\n        if (val.end in acc)   acc[val.end].push(val.start);\n        else                  acc[val.end] = [val.start];\n        return acc;\n    }, {})\n\n    // console.log(pointsData, edgesData, missingPointsData, knnData) \n\n    const width = 800;\n    const height = 800;\n    // const margin = { hor: width / 40, ver: height / 40 };\n    const margin = { hor: 15, ver: 15 };\n\n    const [minX, maxX] = d3.extent(pointsData, d => d.coor[0]);\n    const [minY, maxY] = d3.extent(pointsData, d => d.coor[1]);\n\n    const xScale = d3.scaleLinear()\n                        .domain([minX, maxX])\n                        .range([0, width]);\n    \n    const yScale = d3.scaleLinear()\n                        .domain([minY, maxY])\n                        .range([0, height]);\n\n    const ratio = 0.38;\n\n\n    let svgContour, svgContourPoints;\n    let svgMainView, gMainView, svgMiniMap, gBrush;\n\n    let miniContourPoints;\n\n    let pointSelection;\n\n    const radius = props.radius;\n    const strokeWidth = props.stroke;\n\n\n\n    let colorScale = d3.scaleOrdinal(d3.schemeCategory10);\n\n    const [update, setUpdate] = useState();\n    const [pointsIn, setPointsIn] = useState([]);\n    const [missingPointsIn, setMissingPointsIn] = useState([]);\n    const isSelecting = useRef(false);\n    const isMakingContour = useRef(false);\n    let contour = useRef([]);\n\n\n    let svgs;\n\n\n    function pointsInPolygon(polygon) {\n\n        \n        let scale = getTransformValue()[0];\n\n        polygon = polygon.map(d => [xScale.invert(d[0] - margin.hor / scale), yScale.invert(d[1] - margin.ver / scale)]);\n        let pointsInPolygon = pointsData.reduce(function(acc, val, i){\n            if (inside(val.coor, polygon)) acc.push(i);\n            return acc;\n        }, []);\n        return pointsInPolygon;\n    }\n\n    function getMissingEdgesInfo(missingPointsDict) {\n        let missingPointsList = Object.keys(missingPointsDict);\n        let edges = missingPointsList.reduce(function(acc, val) {\n            let adjacentPoints = knnData[val.toString()]\n            if (adjacentPoints === undefined) return acc;\n            adjacentPoints.forEach(adjacentPoint => {\n                if(parseInt(adjacentPoint) in missingPointsDict) {\n                    let keyStr = parseInt(adjacentPoint) < val ? \n                                adjacentPoint  + \"_\" + val.toString() : \n                                val.toString() + \"_\" + adjacentPoint;\n                    acc.push(keyStr);\n                }\n            });\n            return acc;\n        }, []);\n        edges = Array.from(new Set(edges));\n        edges = edges.map(d => {\n            const incidentPoints = d.split(\"_\");\n            return [parseInt(incidentPoints[0]), parseInt(incidentPoints[1])];\n        })\n        return edges;\n    }\n\n    const drawPlot = (ratio, prefix) => {\n        svgs = d3.select(`#${prefix}_${props.dataset}_${props.method}`)\n        .attr(\"width\", ratio * (width + margin.hor * 2))\n        .attr(\"height\", ratio * (height + margin.ver * 2));\n\n\n        svgs.append(\"rect\")\n            .attr(\"width\", ratio * (width + margin.hor * 2))\n            .attr(\"height\", ratio * (height  + margin.ver * 2))\n            .style(\"fill-opacity\", 1)\n            .style(\"fill\", \"white\");\n            // .style(\"stroke\", \"black\")\n            // .style(\"stroke-width\", 2)\n\n        let svg = svgs.append(\"g\")\n            .attr(\"id\", `${prefix}_g_${props.dataset}_${props.method}`)\n            .attr(\"transform\", `translate(${ratio * margin.hor}, ${ratio * margin.ver})`);\n\n        let svgEdges = svg.append(\"g\")\n                        .attr(\"id\", `${prefix}_edge_g_${props.dataset}_${props.method}`);\n\n        let svgContour = svg.append(\"g\")\n                        .attr(\"id\", `${prefix}_contour_g_${props.dataset}_${props.method}`);\n            \n        let svgContourPoints = svg.append(\"g\")\n                        .attr(\"id\", `${prefix}_contour_point_g_${props.dataset}_${props.method}`);\n\n\n        let svgPoints = svg.append(\"g\")\n                        .attr(\"id\", `${prefix}_circle_g_${props.dataset}_${props.method}`);\n\n        let svgMissingEdges = svg.append(\"g\")\n                        .attr(\"id\", `${prefix}_missing_edge_g_${props.dataset}_${props.method}`);\n        \n                        //points\n        svgPoints.selectAll(\"circle\")\n                        .data(pointsData)\n                         .join(\n                             enter => {\n                                 enter.append(\"circle\")\n                                     .attr(\"class\", (d,i) => \"circle\" + i.toString())\n                                     .attr(\"fill\", d => {\n                                         if (props.isLabel) return colorScale(d.label);\n                                         else return \"black\"; \n                                     })\n                                     .attr(\"cx\", d => ratio * xScale(d.coor[0]))\n                                     .attr(\"cy\", d => ratio * yScale(d.coor[1]))\n                                     .style(\"opacity\", 0.8)\n                                     .attr(\"r\", radius * ratio)\n                             }\n                         );\n        \n                         // edges\n        function scaleBivariate(first, second) {\n                        let lScale = d3.scaleLinear().domain([0, 2]).range([100, 30])\n                        let aScale = d3.scaleLinear().domain([1, -1]).range([30, -30])\n                        let bScale = d3.scaleLinear().domain([1, -1]).range([20, -20])\n            \n                        return d3.color(d3.lab(lScale(first + second), aScale(first - second), bScale(second-first)))\n                    };\n\n        svgEdges.selectAll(\"path\")\n                    .data(edgesData)\n                    .join(\n                        enter => {\n                            enter.append(\"path\")\n                                 .attr(\"fill\", \"none\")\n                                 .attr(\"stroke-width\", strokeWidth * ratio)\n                                 .attr(\"stroke\", d => {\n                                     if (props.showMissing && props.showFalse) return scaleBivariate(d.false_val, d.missing_val);\n                                     else return \"black\";\n                                 })\n                                 .attr(\"d\", d => {\n                                    return d3.line()\n                                             .x(datum => ratio * xScale(pointsData[datum].coor[0]))\n                                             .y(datum => ratio * yScale(pointsData[datum].coor[1]))\n                                             ([d.start, d.end])\n                                 });\n                        }\n                    );\n\n\n    }\n    const getTransformValue = () => {\n        const trans = gMainView.attr('transform');\n        const tmp = trans.split(\"translate(\")[1].split(\",\");\n\n        if (tmp[1].includes(\"scale\")){\n            return [parseFloat(tmp[1].split(\"scale(\")[1]),\n                    parseFloat(tmp[0]),\n                    parseFloat(tmp[1])];\n        }\n        else return [1.0,parseFloat(tmp[0]),parseFloat(tmp[1])];\n\n    }\n\n    function Brushing({selection}) {\n        let scale = getTransformValue()[0];\n        \n        if (selection){\n              let [x0, y0] = selection[0];\n              let moveX = margin.hor * scale - x0 * scale / ratio;\n              let moveY = margin.ver * scale - y0 * scale / ratio;\n              gMainView.attr('transform', `translate(${moveX}, ${moveY}) scale(${scale})`);\n          }\n      }\n\n    const brush = d3.brush()\n                      .extent([[0,0], [ratio * (width + 2 * margin.hor) ,ratio * (height + 2 * margin.ver)]])\n                      .on('brush', Brushing);\n\n    const drag = (e) => { // 매우느림\n\n        const dragX = (e.subject.x - e.x) * 0.1;\n      const dragY = (e.subject.y - e.y) * 0.1;\n      const [scale, transX, transY] = getTransformValue();\n      const moveX = d3.max([d3.min([transX - dragX, margin.hor * scale]),(30 / scale) - (scale - 1.0) * width]);\n      const moveY = d3.max([d3.min([transY - dragY, margin.ver * scale]),(30 / scale) - (scale - 1.0) * height]);\n      gMainView.attr('transform', `translate(${moveX}, ${moveY}) scale(${scale})`);\n    \n    brush.move(gBrush, [\n        [(margin.hor * scale - moveX) * ratio / scale, (margin.ver * scale - moveY) * ratio / scale],\n        [(margin.hor * scale - moveX) * ratio / scale + (width + 2 * margin.hor) * ratio / scale,\n        (margin.ver * scale - moveY) * ratio / scale + (height + 2 * margin.ver) * ratio / scale],\n    ])\n\n    }\n\n    \n\n    useEffect(() => {\n\n\n        d3.select(`#scatterplot_${props.dataset}_${props.method}`).selectAll(\"g\").remove();\n        d3.select(`#minimap_${props.dataset}_${props.method}`).selectAll(\"g\").remove();\n        setUpdate(() => false);\n        // if(svgs !== undefined) {\n        //     console.log(\"remove\")\n        //     svgs.selectAll(\"g\").remove();\n        // }\n\n\n        drawPlot(1.0, \"scatterplot\");\n        drawPlot(ratio, \"minimap\");\n        svgContour = d3.select(`#scatterplot_contour_g_${props.dataset}_${props.method}`);\n        svgContourPoints = d3.select(`#scatterplot_contour_point_g_${props.dataset}_${props.method}`);\n        miniContourPoints = d3.select(`#minimap_contour_point_g_${props.dataset}_${props.method}`);\n        \n        function renderMissingEdges(edges, missingPointsDict) {\n            d3.select(`#scatterplot_missing_edge_g_${props.dataset}_${props.method}`)\n                    .selectAll(\"path\")\n                          .data(edges)\n                          .enter()\n                          .append(\"path\")\n                          .attr(\"fill\", \"none\")\n                          .attr(\"stroke-width\", strokeWidth)\n                          .attr(\"stroke\", \"red\")\n                          .attr(\"d\", d => {\n                              return d3.line()\n                                      .x(datum => xScale(pointsData[datum].coor[0]))\n                                      .y(datum => yScale(pointsData[datum].coor[1]))\n                                      (d);\n                          })\n                          .style(\"opacity\", d => {\n                              return (missingPointsDict[d[0]] + missingPointsDict[d[1]]) / 2\n                          });\n\n\n            d3.select(`#minimap_missing_edge_g_${props.dataset}_${props.method}`)\n                          .selectAll(\"path\")\n                                .data(edges)\n                                .enter()\n                                .append(\"path\")\n                                .attr(\"fill\", \"none\")\n                                .attr(\"stroke-width\", strokeWidth * ratio)\n                                .attr(\"stroke\", \"red\")\n                                .attr(\"d\", d => {\n                                    return d3.line()\n                                            .x(datum => ratio * xScale(pointsData[datum].coor[0]))\n                                            .y(datum => ratio * yScale(pointsData[datum].coor[1]))\n                                            (d);\n                                })\n                                .style(\"opacity\", d => {\n                                    return (missingPointsDict[d[0]] + missingPointsDict[d[1]]) / 2\n                                });\n        }\n\n        const finalPointSelection = () => {\n            \n            let points = pointsInPolygon(contour.current);\n            \n            svgContourPoints.selectAll(\"circle\")\n                    .data(points)\n                    .enter()\n                    .append(\"circle\")\n                    .attr(\"r\", radius * 2)\n                    .attr(\"cx\", d => \n                        xScale(pointsData[d].coor[0]))\n                    .attr(\"cy\", d => yScale(pointsData[d].coor[1]))\n                    .attr(\"fill\", \"blue\")\n                    .attr(\"class\", d => \"label\" + pointsData[d].label.toString());\n\n            miniContourPoints.selectAll(\"circle\")\n                    .data(points)\n                    .enter()\n                    .append(\"circle\")\n                    .attr(\"r\", radius * 2 * ratio)\n                    .attr(\"cx\", d => ratio * xScale(pointsData[d].coor[0]))\n                    .attr(\"cy\", d => ratio * yScale(pointsData[d].coor[1]))\n                    .attr(\"fill\", \"blue\");\n        \n            let missingPointsDict = points.reduce(function(acc, val) {\n                let currentDict = missingPointsData[val];\n                Object.keys(currentDict).forEach(key => {\n                    if (key in acc) acc[key] += currentDict[key];\n                    else            acc[key] =  currentDict[key];\n                });\n                return acc;\n            }, {})\n            \n\n            let listLen = points.length;\n            Object.keys(missingPointsDict).forEach(d => {\n                missingPointsDict[d] /= listLen;\n            })\n            let edges = getMissingEdgesInfo(missingPointsDict);\n            renderMissingEdges(edges, missingPointsDict);\n\n            setMissingPointsIn(() => missingPointsDict);\n            setPointsIn(() => points);\n            setUpdate(() => true);\n        }\n\n        pointSelection = d3.select(`#scatterplot_g_${props.dataset}_${props.method}`)\n                        .append(\"rect\")\n                        .attr(\"width\", width + margin.hor * 2)\n                        .attr(\"height\", height  + margin.ver * 2)\n                        .attr(\"transform\", \"translate(-\" + margin.hor + \", -\" + margin.ver + \")\")\n                        .style(\"fill-opacity\", 0)\n                        .on(\"click\", function(event) {\n                            if(!isSelecting.current) {\n                                \n                                const [scale, transX, transY] = getTransformValue();\n                                const realX = (event.offsetX - transX + margin.hor) / scale;\n                                const realY = (event.offsetY - transY + margin.hor) / scale;\n                                \n                                if(!isMakingContour.current) {\n                                    // 새 점\n                                    isMakingContour.current = true;\n                                    // contour.current.push([event.offsetX, event.offsetY])\n                                    contour.current.push([realX, realY])\n                                    svgContour.append(\"path\")\n                                            .attr(\"id\", \"current_path\")\n                                            .attr(\"fill\", \"none\")\n                                            .attr(\"stroke\", \"blue\")\n                                            .attr(\"storke-width\", 1)\n                                            .attr(\"stroke-dasharray\", \"2 \");\n                                }\n                                else {\n                                    // 이미 시작점은 존재한 상태에서 새로운 점 그리는 중 \n                                    svgContour.select(\"#current_path\")\n                                            .attr(\"id\", \"\")\n                                            .attr(\"d\", () => {\n                                                let start, end;\n                                                if (Math.abs(realX - contour.current[0][0]) < 4 &&\n                                                    Math.abs(realY - contour.current[0][1]) < 4) {\n                                                        start = contour.current[contour.current.length - 1];\n                                                        end = contour.current[0];\n                                                        isSelecting.current = true;\n                                                        isMakingContour.current = false; // finish making contour\n                                                    }\n                                                else {\n                                                    contour.current.push([realX, realY])\n                                                    start = contour.current[contour.current.length - 2];\n                                                    end = contour.current[contour.current.length - 1];\n                                                    svgContour.append(\"path\")\n                                                                .attr(\"id\", \"current_path\")\n                                                                .attr(\"fill\", \"none\")\n                                                                .attr(\"stroke\", \"blue\")\n                                                                .attr(\"storke-width\", 1)\n                                                                .attr(\"stroke-dasharray\", \"2 \");\n                                                }\n                                                \n                                                return d3.line()\n                                                            .x(datum => datum[0])\n                                                            .y(datum => datum[1])\n                                                            ([[start[0] - margin.hor / scale, start[1] - margin.ver / scale],[end[0] - margin.hor / scale, end[1] - margin.ver / scale]])\n                                            })\n                                    \n\n                                    if(isSelecting.current) { // finish making contour 마지막검에서 끝날때 \n                                        finalPointSelection();\n                                    }   \n                                }\n                                if(isMakingContour.current){\n\n                                    // 마지막합쳐질떄 제외하고 세 점을 만들어야 함.\n                                    \n                                    // console.log(event.offsetX, event.offsetY);\n                                    svgContour.append(\"circle\")\n                                            .attr(\"r\", 1.5)\n                                            .attr(\"cx\", realX - margin.hor / scale)\n                                            .attr(\"cy\", realY - margin.ver / scale)\n                                            .attr(\"fill\", \"none\")\n                                            .attr(\"stroke\", \"blue\")\n                                            .attr(\"stroke-width\", 1);\n                                }\n                            }\n                            else { // 이미 selection있을 경우\n                                // clearing\n                                // TODO : refresh\n\n                                contour.current = [];\n                                isSelecting.current = false;\n                                setUpdate(() => false);\n\n                                svgContour.selectAll(\"path\").remove();\n                                svgContour.selectAll(\"circle\").remove();\n                                svgContourPoints.selectAll(\"circle\").remove();\n                                miniContourPoints.selectAll(\"circle\").remove();\n                                d3.select(`#scatterplot_missing_edge_g_${props.dataset}_${props.method}`).selectAll(\"path\").remove();\n                                d3.select(`#minimap_missing_edge_g_${props.dataset}_${props.method}`).selectAll(\"path\").remove();\n\n                            }\n                        })\n                        .on(\"mousemove\", function(event) {\n                            svgContour.select(\"#current_path\")\n                                        .attr(\"d\",() =>{\n                                            const [scale, transX, transY] = getTransformValue();\n                                            const realX = (event.offsetX - transX + margin.hor) / scale;\n                                            const realY = (event.offsetY - transY + margin.ver) / scale;\n                                            let start = contour.current[contour.current.length - 1]\n                                            let end;\n                                            if (Math.abs(realX - contour.current[0][0]) < 4 &&\n                                                Math.abs(realY - contour.current[0][1]) < 4) \n                                                end = contour.current[0];\n                                            else end = [realX, realY]\n                                            return d3.line()\n                                                    .x(datum => datum[0])\n                                                    .y(datum => datum[1])\n                                                    ([[start[0] - margin.hor / scale, start[1] - margin.ver / scale],[end[0] - margin.hor / scale, end[1] - margin.ver / scale]])\n                                        })\n                                    })\n                        .on('dblclick', e => {\n                            svgContour.select(\"#current_path\")\n                                        .attr(\"d\", () => {\n                                            let start = contour.current[contour.current.length - 1];\n                                            let end = contour.current[0];\n                                            const scale = getTransformValue()[0];\n                                            return d3.line()\n                                                    .x(datum => datum[0])\n                                                    .y(datum => datum[1])\n                                                    ([[start[0] - margin.hor / scale, start[1] - margin.ver / scale],[end[0] - margin.hor / scale, end[1] - margin.ver / scale]])\n                                        })\n                                        .attr(\"id\", \"\")\n                                        .attr(\"d\", () => {\n                                            const scale = getTransformValue()[0];\n                                                let start, end;\n                                                start = contour.current[contour.current.length - 1];\n                                                end = contour.current[0];\n                                                isSelecting.current = true;\n                                                isMakingContour.current = false; // finish making contour\n                                                return d3.line()\n                                                            .x(datum => datum[0])\n                                                            .y(datum => datum[1])\n                                                            ([[start[0] - margin.hor / scale, start[1] - margin.ver / scale],[end[0] - margin.hor / scale, end[1] - margin.ver / scale]])\n                                            });\n\n                                            finalPointSelection();\n\n                        })\n                        .on(\"contextmenu\", e => {\n                            if (!isSelecting.current){\n                            e.preventDefault();\n                            // svgContour아래에 있는거 다 지우면 됨. \n                            // contour안에 있는거 지우고\n                            // \n                            contour.current = [];\n                            svgContour.select(\"#current_path\")\n                                        .attr(\"id\", \"\")\n\n                            svgContour.selectAll(\"*\").remove();\n\n                            isSelecting.current = false;\n                            isMakingContour.current = false;\n                            setUpdate(() => false);\n                            }\n                        });\n        \n\n        svgMainView = d3.select(\"#scatterplot_\" + props.dataset + \"_\" + props.method);\n        svgMainView.select(\"rect\").style(\"fill-opacity\", 0);\n        gMainView = d3.select(\"#scatterplot_g_\" + props.dataset + \"_\" + props.method);\n        \n\n        d3.select(`#scatterplot_circle_g_${props.dataset}_${props.method}`).selectAll(\"circle\")\n                            .data(pointsData)\n                            .join(enter => null, update => {\n                                update.on(\"mouseenter\", function() {\n                                    if(!isSelecting.current && !isMakingContour.current)\n                                       d3.select(this).attr(\"r\", radius * 3)\n                                })\n                                .on(\"mouseleave\", function() {\n                                    if(!isSelecting.current && !isMakingContour.current)\n                                       d3.select(this).attr(\"r\", radius)\n                                })\n                                .on(\"click\", function(e, d) {\n                                    if(!isSelecting.current && !isMakingContour.current){\n                                       isSelecting.current = true;\n                                       d3.select(this).attr(\"r\", radius * 5);\n                                       let missingPointsDict = missingPointsData[d.idx];\n                                       let edges = getMissingEdgesInfo(missingPointsDict)\n                                       renderMissingEdges(edges, missingPointsDict);\n                                    }\n                                });\n                                \n\n                            });\n\n        // minimap\n\n        d3.select(\"#minimap\").style(\"position\",\"fixed\");\n        svgMiniMap = d3.select(\"#minimap_\" + props.dataset + \"_\" + props.method)\n                        \n\n                        svgMainView.on('wheel', e => {\n                            let newScale, newTransX, newTransY;\n                            const {offsetX, offsetY, wheelDelta} = e;\n                            \n                            const [scale, transX, transY] = getTransformValue();\n                \n                            if (wheelDelta > 0){ // ZOOM IN\n                                if (scale < 5.0){\n                                    newScale = parseFloat(scale) + parseFloat(0.1);\n                                    newTransX = transX - 0.1 * (offsetX - transX) / scale;\n                                    newTransY = transY - 0.1 * (offsetY - transY) / scale;\n                                    gMainView.attr('transform', `translate(${newTransX.toFixed(3)}, ${newTransY.toFixed(3)}) scale(${newScale.toFixed(1)})`);\n                                    \n                                    brush.move(gBrush, [\n                                        [(margin.hor * newScale - newTransX) * ratio / newScale, (margin.ver * newScale - newTransY) * ratio / newScale],\n                                        [(margin.hor * newScale - newTransX) * ratio / newScale + (width + 2 * margin.hor) * ratio / newScale,\n                                         (margin.ver * newScale - newTransY) * ratio / newScale + (height + 2 * margin.ver) * ratio / newScale],\n                                    ]);\n                                }\n                            }\n                            else if (scale > 1.0){ // ZOOM OUT\n                                    newScale = parseFloat(scale) - parseFloat(0.1);\n                                    newTransX = transX + 0.1 * (offsetX - transX) / scale;\n                                    newTransY = transY + 0.1 * (offsetY - transY) / scale;\n                                    const moveX = d3.max([d3.min([newTransX, margin.hor * newScale]),(30 / newScale) - (newScale - 1.0) * width]);\n                                    const moveY = d3.max([d3.min([newTransY, margin.ver * newScale]),(30 / newScale) - (newScale - 1.0) * height]);\n                                    gMainView.attr('transform', `translate(${moveX.toFixed(3)}, ${moveY.toFixed(3)}) scale(${newScale.toFixed(1)})`);\n                \n                                    brush.move(gBrush, [\n                                        [(margin.hor * newScale - moveX) * ratio / newScale, (margin.ver * newScale - moveY) * ratio / newScale],\n                                        [(margin.hor * newScale - moveX) * ratio / newScale + (width + 2 * margin.hor) * ratio / newScale,\n                                         (margin.ver * newScale - moveY) * ratio / newScale + (height + 2 * margin.ver) * ratio / newScale],\n                                    ]);\n                            }\n                        });\n\n                svgMiniMap.on('wheel', e => {\n                    let newScale, newTransX, newTransY;\n                    const {offsetX, offsetY, wheelDelta} = e;\n                    \n                    const [scale, transX, transY] = getTransformValue();\n                    if (wheelDelta > 0){ // ZOOM IN\n                        if (scale < 5.0){\n                            newScale = parseFloat(scale) + parseFloat(0.1);\n                            newTransX = transX - 0.1 * (offsetX / ratio - transX) / scale;\n                            newTransY = transY - 0.1 * (offsetY / ratio- transY) / scale;\n                            gMainView.attr('transform', `translate(${newTransX.toFixed(3)}, ${newTransY.toFixed(3)}) scale(${newScale.toFixed(1)})`);\n                            \n                            brush.move(gBrush, [\n                                [(margin.hor * newScale - newTransX) * ratio / newScale, (margin.ver * newScale - newTransY) * ratio / newScale],\n                                [(margin.hor * newScale - newTransX) * ratio / newScale + (width + 2 * margin.hor) * ratio / newScale,\n                                 (margin.ver * newScale - newTransY) * ratio / newScale + (height + 2 * margin.ver) * ratio / newScale],\n                            ]);\n                        }\n                    }\n                    else if (scale > 1.0){ // ZOOM OUT\n                            newScale = parseFloat(scale) - parseFloat(0.1);\n                            newTransX = transX + 0.1 * (offsetX / ratio - transX) / scale;\n                            newTransY = transY + 0.1 * (offsetY / ratio- transY) / scale;\n                            const moveX = d3.max([d3.min([newTransX, margin.hor * newScale]),(30 / newScale) - (newScale - 1.0) * width]);\n                            const moveY = d3.max([d3.min([newTransY, margin.ver * newScale]),(30 / newScale) - (newScale - 1.0) * height]);\n                            gMainView.attr('transform', `translate(${moveX.toFixed(3)}, ${moveY.toFixed(3)}) scale(${newScale.toFixed(1)})`);\n        \n                            brush.move(gBrush, [\n                                [(margin.hor * newScale - moveX) * ratio / newScale, (margin.ver * newScale - moveY) * ratio / newScale],\n                                [(margin.hor * newScale - moveX) * ratio / newScale + (width + 2 * margin.hor) * ratio / newScale,\n                                 (margin.ver * newScale - moveY) * ratio / newScale + (height + 2 * margin.ver) * ratio / newScale],\n                            ]);\n                    }\n                });\n\n        svgMainView.call(\n            d3.drag()\n            .on(\"drag\",drag));\n\n        gBrush = svgMiniMap.append('g').attr('id', 'gBrush');\n\n        gBrush.call(brush);\n        brush.move(gBrush, [\n            [0,0],\n            [(width + 2 * margin.hor) * ratio, (height + 2 * margin.ver) * ratio]\n        ]);\n        \n        svgMiniMap.selectAll('.handle').remove();\n        svgMiniMap.selectAll('.overlay').remove();\n\n    }, [props.method]);\n   \n\n\n    return (\n        <div id=\"content\">\n            <div id=\"content-left\">\n                <div id=\"scatterplot\">\n                    <svg id={`scatterplot_${props.dataset}_${props.method}`}></svg>\n                </div>\n                <div id=\"detailview\">\n                    <BottomBarChart\n                        colorScale={colorScale}\n                        data={pointsData}\n                        update={update}\n                        points={pointsIn}\n                        label={label_data}\n                        missingPoints={missingPointsIn}\n                        dataset={props.dataset}\n                        method={props.method}/>\n                </div>\n            </div>\n            <div id=\"content-right\">\n                <div id=\"compareview\">\n                <CompareView\n                    main_method={props.method}\n                    methods={props.methods}\n                    dataset={props.dataset}\n                    update={update}\n                    points={pointsIn}\n                    data={pointsData}\n                    label={label_data}\n                    dataset={props.dataset}\n                    colorScale={colorScale}\n                    missingPoints={missingPointsIn}\n                    setMainMethod={props.setMainMethod}\n                /></div>\n\n                <ShepardDiagram\n                    method={props.method}\n                    dataset={props.dataset} \n                />\n                <div className=\"section-title\">\n                    Label Distribution</div>\n                <BarChart \n                    method={props.method}\n                    dataset={props.dataset}\n                    colorScale={colorScale}\n                    option={\"count\"}\n                    threshold={0.4}\n                />\n\n            </div>\n            \n            <div id=\"minimap\" style={{bottom:0, left:0}}>\n                <div className=\"minimap-title\">Minimap</div>\n                <svg id={`minimap_${props.dataset}_${props.method}`}></svg>\n            </div>\n            <div id=\"repoview\"></div>\n        </div>\n    );\n};\n\nexport default ExplorerNew;","import { range } from 'd3';\nimport React, { useState } from 'react';\nimport aaa from '../assets/mnist_sampled_10_isomap.png';\n\nconst RepositoryTab = (props) => {\n\n  const repo_dict = [\n    {dataset: \"mnist_sampled_10\", method: \"pca\", thumbnail: require(\"../assets/mnist_sampled_10_pca.png\"), repo: NaN},\n    {dataset: \"mnist_sampled_10\", method: \"umap\", thumbnail: require(\"../assets/mnist_sampled_10_umap.png\"), repo: NaN},\n    {dataset: \"mnist_sampled_10\", method: \"isomap\", thumbnail: require(\"../assets/mnist_sampled_10_isomap.png\"), repo: NaN},\n    {dataset: \"mnist_sampled_10\", method: \"tsne\", thumbnail: require(\"../assets/mnist_sampled_10_tsne.png\"), repo: NaN},\n  ]\n  \n  function makeButtons(){\n    let items = [];\n    for (let i in repo_dict){\n      items.push(\n        <button id=\"repo-button\"> \n          <img src={repo_dict[i].thumbnail.default} alt={repo_dict[i].dataset+\"-\"+repo_dict[i].method} \n            style={{width:\"200px\", height:\"200px\", margin:\"10px 0\"}}/>\n          <div id=\"repo-name\" style={{transform: \"translateY(-120px)\"}}>\n            {repo_dict[i].dataset}<br/>{repo_dict[i].method}\n            </div>\n        </button>\n      )\n    }\n    return items;\n  }\n\n\n  return (\n    <div id=\"repoview\" className='Tab'>\n      <div className=\"tab-title\">\n      Repository\n      </div>\n      {makeButtons()}\n\n    </div>\n  );\n\n\n}\n\nexport default RepositoryTab;","import './App.css';\nimport React, { useState } from 'react'\n\nimport BasicInfoTab from './components/Left-BasicInfo';\nimport ControlTab from './components/Left-Control';\nimport ExplorerNew from './components/Explorer-new';\nimport RepositoryTab from './components/Right-Repository';\n\nfunction App() {\n\n  const methods = [\"pca\" , \"isomap\", \"tsne\", \"umap\"];\n  const [mainMethod, setMainMethod] = useState(\"pca\");\n\n  const embedding_parameters = {'param1': 111, 'param2': 222, 'param3': 222, 'param4': 222, 'param5': 222};\n\n  return (\n    <div className=\"App\">\n      <title>Embeding Explorer</title>\n      <div className=\"App-header\">\n        Distortion in Dimension Reduction\n      </div>\n      <div id=\"body\">\n        <div id=\"left-bar\">\n            <BasicInfoTab\n              method=\"pca\"\n              dataset=\"mnist_sampled_10\"\n              isLabel={true}\n              emb_params={embedding_parameters}\n            />\n            <ControlTab\n              method=\"pca\"\n              dataset=\"mnist_sampled_10\"\n              isLabel={true}\n              emb_params={embedding_parameters}\n            />\n        </div>\n          <ExplorerNew\n            methods={methods}\n            method={mainMethod}\n            dataset=\"mnist_sampled_10\"\n            isLabel={true}\n            showMissing={true}\n            showFalse={true}\n            radius={2.5}\n            stroke={3}\n            setMainMethod = {setMainMethod}\n          />\n        </div>\n        <div id=\"right-bar\">\n          <RepositoryTab/>\n        </div>\n      <footer/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport axios from 'axios';\r\n\r\naxios.defaults.xsrfCookieName = 'csrftoken'\r\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","export default __webpack_public_path__ + \"static/media/mnist_sampled_10_isomap.17dbb787.png\";"],"sourceRoot":""}