{"version":3,"sources":["json sync /^/.//.*_points/.json$","json sync /^/.//.*_shepard/.json$","json sync /^/.//.*_edges/.json$","json sync /^/.//.*_missing_points/.json$","components/Bottom-BarChart.js","components/Left-BasicInfo.js","components/Left-Control.js","components/Detail-Shepard.js","components/Detail-BarChart.js","components/Compare-Component.js","components/CompareView.js","components/Explorer-new.js","App.js","reportWebVitals.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","xAxis","yAxis","x","y","series","svg","tooltip","BasicInfoTab","props","label_data","df_name","dataset","emb_name","method","emb_params","isLabel","pointsData","require","Array","from","Set","d","label","sort","a","b","spacing","num","txt","parse","className","style","height","width","overflow","toUpperCase","JSON","stringify","obj","printParam","ControlTab","df_filename","emb_filename","slice","buildFileSelector","fileSelector","document","createElement","setAttribute","input_original","input_emb","marginTop","onClick","preventDefault","click","fontSize","onSubmit","alert","state","value","marginLeft","type","align","ShepardDiagram","jsonFileName","distance_data","plotHeight","xLabels","useState","fill","_","i","yLabels","xLabelsVisibility","matrix","current","j","push","useEffect","shepardAxisSvg","d3","domain","range","append","attr","call","name","margin","textAlign","fontWeight","position","transform","xLabelsLocation","xLabelWidth","yLabelWidth","data","squares","cellStyle","background","min","max","color","cellRender","BarChart","option","threshold","countLabel","df","count","sumLabel","df_label","df_value","target_label","sum","NaN","parseFloat","point_data","toString","trust_data","trust","cont_data","cont","label_list","filter","React","activeSeriesIndex","activeDatumIndex","setState","useMemo","axes","primary","stacked","show","hardMin","getSeriesStyle","useCallback","index","length","opacity","getDatumStyle","datum","r","seriesIndex","otherHovered","onFocus","focused","colorScale","renderSVG","CompareViewComponent","compareSvg","compareSvgPoints","coor","minX","maxX","minY","maxY","xScale","yScale","selectAll","join","enter","text","on","this","selection","console","log","setMainMethod","select","remove","update","points","radius","missingPoints","CompareView","methods","display","BottomBarChart","isCount","setCount","res","reduce","cnt_data","val_data","forEach","n","v","key","values","isNaN","padding","g","ticks","tickSizeOuter","bandwidth","offsetX","offsetY","target","getAttribute","toFixed","old","ExplorerNew","svgContour","svgContourPoints","svgMainView","gMainView","svgMiniMap","gBrush","miniContourPoints","svgs","edgesData","missingPointsData","knnData","acc","val","start","end","ratio","strokeWidth","stroke","setUpdate","pointsIn","setPointsIn","missingPointsIn","setMissingPointsIn","isSelecting","useRef","isMakingContour","contour","getMissingEdgesInfo","missingPointsDict","edges","adjacentPoints","undefined","adjacentPoint","parseInt","keyStr","incidentPoints","split","drawPlot","prefix","svgEdges","svgPoints","showMissing","showFalse","first","second","lScale","aScale","bScale","scaleBivariate","false_val","missing_val","getTransformValue","tmp","includes","brush","extent","scale","x0","y0","moveX","moveY","drag","dragX","subject","dragY","transX","transY","move","renderMissingEdges","finalPointSelection","polygon","invert","inside","pointsInPolygon","currentDict","listLen","event","realX","realY","Math","abs","idx","newScale","newTransX","newTransY","wheelDelta","main_method","paddingTop","bottom","left","App","mainMethod","embedding_parameters","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","axios","defaults","xsrfCookieName","xsrfHeaderName","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9e743fb3.chunk.js","sourcesContent":["var map = {\n\t\"./mnist_sampled_10_isomap_missing_points.json\": 65,\n\t\"./mnist_sampled_10_isomap_points.json\": 211,\n\t\"./mnist_sampled_10_pca_missing_points.json\": 66,\n\t\"./mnist_sampled_10_pca_points.json\": 212,\n\t\"./mnist_sampled_10_tsne_missing_points.json\": 67,\n\t\"./mnist_sampled_10_tsne_points.json\": 213,\n\t\"./mnist_sampled_10_umap_missing_points.json\": 68,\n\t\"./mnist_sampled_10_umap_points.json\": 214\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 13;","var map = {\n\t\"./mnist_sampled_10_isomap_shepard.json\": 217,\n\t\"./mnist_sampled_10_pca_shepard.json\": 218,\n\t\"./mnist_sampled_10_tsne_shepard.json\": 219,\n\t\"./mnist_sampled_10_umap_shepard.json\": 220\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 216;","var map = {\n\t\"./mnist_sampled_10_isomap_edges.json\": 225,\n\t\"./mnist_sampled_10_pca_edges.json\": 226,\n\t\"./mnist_sampled_10_tsne_edges.json\": 227,\n\t\"./mnist_sampled_10_umap_edges.json\": 228\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 224;","var map = {\n\t\"./mnist_sampled_10_isomap_missing_points.json\": 65,\n\t\"./mnist_sampled_10_pca_missing_points.json\": 66,\n\t\"./mnist_sampled_10_tsne_missing_points.json\": 67,\n\t\"./mnist_sampled_10_umap_missing_points.json\": 68\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 229;","import React, { useEffect, useState } from 'react';\n\nimport * as d3 from 'd3';\n\n\nlet xAxis, yAxis, x, y, series, svg, tooltip;\n\nconst width = 800;\nconst height = 200;\nconst margin = {top : 30, left : 50, bottom : 30, right : 30};\n\n\n\n\nconst BottomBarChart = (props) => {\n\n    const [isCount, setCount] = useState(true);\n\n    const onClick = () => {\n        setCount(old => !old);\n    }\n    \n    const {data, label, points, update, colorScale} = props;\n\n    const res = label.reduce((a,b)=> (a[b]=0,a),{});\n\n    let cnt_data = [{name:\"false\", ...res, }, {name:\"missing\", ...res}];\n    let val_data = [{name:\"false\", ...res, }, {name:\"missing\", ...res}];\n\n    svg = d3.select(\"#bottomBarChart\");\n\n\n    useEffect(() => {\n        svg.selectAll(\"g\").remove();\n        if (update){\n            points.forEach(n => {\n                if (data[n].cont > 0){ // missing\n                    val_data[1][data[n].label] += data[n].cont;\n                    cnt_data[1][data[n].label] += 1;\n                }\n                if (data[n].trust > 0){\n                    val_data[0][data[n].label] += data[n].trust;\n                    cnt_data[0][data[n].label] += 1;\n                }\n            });\n\n            \n            x = d3.scaleLinear()\n                .range([margin.left, width - margin.right]);\n\n                \n            if (isCount) {\n                series = d3.stack()\n                .keys(label)(cnt_data)\n                .map(d => (d.forEach(v => v.key = d.key), d));\n                x.domain([0,points.length]);\n            }\n            else {\n                series = d3.stack()\n                .keys(label)(val_data)\n                .map(d => (d.forEach(v => v.key = d.key), d));\n                x.domain([0, d3.max(val_data.map(d => Object.values(d).reduce((a, b) => a+(isNaN(parseFloat(b))?0:parseFloat(b)))))]);\n            }\n\n            y = d3.scaleBand()\n                .domain([\"missing\", \"false\"])\n                .range([margin.top, height - margin.bottom])\n                .padding(0.08);\n\n\n            xAxis = g => g\n                .attr(\"transform\", `translate(0,${margin.top + (height - margin.top - margin.bottom) * 0.04})`)\n                .call(d3.axisTop(x).ticks(width / 100, \"s\"))\n                .call(g => g.selectAll(\".domain\").remove());\n\n            yAxis = g => g\n                .attr(\"transform\", `translate(${margin.left},0)`)\n                .call(d3.axisLeft(y).tickSizeOuter(0))\n                .call(g => g.selectAll(\".domain\").remove());\n\n            \n        svg.attr(\"viewBox\", [0, 0, width, height]);\n\n\n            svg.append(\"g\")\n                .selectAll(\"g\")\n                .data(series)\n                .join(\"g\")\n                .attr(\"fill\", d => colorScale(d.key))\n                .selectAll(\"rect\")\n                .data(d => d)\n                .join(\"rect\")\n                .attr(\"x\", d => x(d[0]))\n                .attr(\"y\", (d, i) => y(d.data.name))\n                .attr(\"width\", d => x(d[1]) - x(d[0]))\n                .attr(\"height\", y.bandwidth())\n                .on(\"mouseover\", function() { tooltip.style(\"display\", null); })\n                .on(\"mouseout\", function() { tooltip.style(\"display\", \"none\"); })\n                .on(\"mousemove\", function(d) {\n                    tooltip.attr(\"transform\", `translate(${d.offsetX - 30}, ${d.offsetY - 25} )`);\n                    tooltip.select(\"text\").text(d.target.getAttribute(\"text\"));\n                })\n                .attr(\"text\", d => `${d.key}: ${(d[1] - d[0]).toFixed(3)}`)\n\n                svg.append(\"g\")\n                    .call(xAxis);\n\n                svg.append(\"g\")\n                    .call(yAxis);\n\n            tooltip = svg.append(\"g\")\n                .attr(\"class\", \"tooltip\")\n                .style(\"display\", \"none\");\n                      \n                  tooltip.append(\"rect\")\n                    .attr(\"width\", 60)\n                    .attr(\"height\", 20)\n                    .attr(\"fill\", \"white\")\n                    .style(\"opacity\", 0.5);\n                  \n                  tooltip.append(\"text\")\n                    .attr(\"x\", 5)\n                    .attr(\"dy\", \"1.2em\")\n                    .style(\"text-anchor\", \"start\")\n                    .attr(\"font-size\", \"12px\")\n                    .attr(\"font-weight\", \"bold\");\n            \n        }\n    },[props.update, isCount]);\n\n\n\n    return (\n        <div id=\"detailview\">\n            <button onClick={onClick}>change</button>\n            <svg id=\"bottomBarChart\"></svg>\n        </div>\n    )\n    \n};\n\nexport default BottomBarChart;","import React, { useState } from 'react';\nimport parse from 'html-react-parser';\n\nconst BasicInfoTab = (props) => {\n  \n  const df_name = props.dataset;\n  const emb_name = props.method;\n  const emb_params = props.emb_params;\n  let label_data;\n\n  if (props.isLabel){\n    let pointsData = require(\"../json/\" + props.dataset + \"_\" + props.method + \"_points.json\");\n    label_data = Array.from(new Set(pointsData.map((d) => d.label))).sort((a,b)=> a - b);\n  }else{ label_data = 'not-exist'; }\n  const printParam = (obj) => {\n    let txt = '';\n    for (let x in obj){\n      txt+= x + \"&nbsp;&nbsp;:&nbsp;&nbsp;\" + obj[x] + '<br/>';\n    }\n    txt += \"\"\n    return parse(txt);\n  }\n\n  const spacing = (num) => {\n    let txt = '';\n    for (let x = 0; x < num; x++){\n      txt+= \"&nbsp;\"\n    }\n    return parse(txt);\n  }\n\n  return (\n    <div id=\"basic-info\" className='Tab'>\n       <div className=\"tab-title\">\n       Basic Information\n       </div>\n      <div className=\"keyword\">\n        <b>DATASET</b>{spacing(5)}\n        <div style={{height:'20px',width:'220px',overflow:'auto'}}>{df_name.toUpperCase()}</div></div>\n      <div className=\"data\" style={{height:'30px',width:'310px',overflow:'auto'}}>\n        {`label${spacing(2)}:${spacing(2)}${JSON.stringify(label_data)}`}</div>\n      \n      <div className=\"keyword\">\n        <b>EMBEDDING</b>{spacing(5)}\n        <div style={{height:'20px',width:'180px',overflow:'auto'}}>{emb_name.toUpperCase()}</div></div>\n      <div className=\"data\" style={{height:'80px',width:'310px',overflow:'auto'}}>\n        {printParam(emb_params)}</div>\n    </div>\n  );\n\n\n}\n\nexport default BasicInfoTab;","import React, { useState } from 'react';\nimport parse from 'html-react-parser';\n\n\nconst ControlTab = (props) => {\n\n  let df_filename = props.dataset + \"_original.json\";\n  let emb_name = props.method;\n  let emb_params = props.emb_params;\n  let emb_filename = props.dataset + \"_\" + props.method + \"_points(\";\n  for (let x in emb_params){\n    emb_filename += emb_params[x] + \"_\";\n  } emb_filename = emb_filename.slice(0,-1) + \").json\";\n\n  let label_data;\n  if (props.isLabel){\n    let pointsData = require(\"../json/\" + props.dataset + \"_\" + props.method + \"_points.json\");\n    label_data = Array.from(new Set(pointsData.map((d) => d.label))).sort((a,b)=> a - b);\n  }else{ label_data = 'not-exist'; }\n\n  const printParam = (obj) => {\n    let txt = '';\n    for (let x in obj){\n      txt += '<div style=\"display: flex; padding-bottom:5px\">'\n      + `<div style=\"width: 90px; margin: 0 10px\">${x}</div>`\n      + `<input type = \"text\" name = \"${x}\" value = \"${obj[x]}\"`\n      + 'onChange={handleChange} /><br/></div>';\n    }\n    return parse(txt);\n  }\n  \n  const spacing = (num) => {\n    let txt = '';\n    for (let x = 0; x < num; x++){\n      txt+= \"&nbsp;\"\n    }\n    return parse(txt);\n  }\n  \n  function buildFileSelector(){\n    const fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n    fileSelector.setAttribute('multiple', 'multiple');\n    return fileSelector;\n  }\n  const input_original = buildFileSelector();\n  const input_emb = buildFileSelector();\n  \n\n  const onClickData = (e) => {\n    e.preventDefault();\n    input_original.click();\n  }\n  const onClickMeta = (e) => {\n    e.preventDefault();\n    input_emb.click();\n  }\n  const onClickEmb = (e) => {\n    e.preventDefault();\n    input_emb.click();\n  }\n  const handleChange = (e) => {\n    //\n  }\n  const handleSubmit = (e) => {\n    alert('A name was submitted: ' + this.state.value);\n    e.preventDefault();\n  }\n\n  return (\n    <div id=\"control\" className='Tab'>\n        <div className=\"tab-title\">\n        Control\n        </div>\n      <div className=\"keyword\">\n        <b style={{marginTop:'4px', height:'20px', width:'120px'}}>DATASET</b>\n        <button onClick={onClickData} style={{width:'200px'}}>Load Original Data</button>\n      </div>\n      <div className=\"data\"  style={{height:'30px',width:'310px',overflow:'auto', fontSize:'15px'}}>\n        <div>{`file${spacing(2)}:${spacing(2)}${df_filename}`}</div>\n      </div>\n\n      \n      <div className=\"keyword\">\n        <b style={{marginTop:'4px', height:'20px', width:'120px'}}>EMBEDDING</b>\n      </div>\n      <div className=\"keyword\">\n        <button onClick={onClickMeta}>Load Meta Data</button>\n        {spacing(2)}\n        <button onClick={onClickEmb}>Load Embedding Data</button>\n      </div>\n      <div className=\"data\"  style={{height:'30px',width:'310px',overflow:'auto', fontSize:'15px'}}>\n      {`file${spacing(2)}:${spacing(3)}${emb_filename}`}</div>\n\n      <div>\n        <form onSubmit={handleSubmit}>\n          {printParam(emb_params)}\n          <div style={{marginLeft:\"175px\"}}>\n            <input type=\"reset\" value=\"Reset\" align=\"right\"/>{spacing(2)}\n            <input type=\"submit\" value=\"Submit\" align=\"right\"/>\n          </div>\n        </form>    \n      </div>\n    </div>\n  );\n\n}\n\nexport default ControlTab;","import React, { useEffect, useState } from 'react';\nimport HeatMap from 'react-heatmap-grid';\nimport * as d3 from 'd3';\n\n\nconst ShepardDiagram = (props) => {\n  let jsonFileName = props.dataset + \"_\" + props.method;\n  // jsonFileName = \"mnist_sampled_50_pca\"\n  let distance_data = require(\"../json/\" + jsonFileName + \"_shepard.json\");\n  // let dist_orig = Object.values(distance_data.dist_orig);\n  // let dist_emb = Object.values(distance_data.dist_emb);\n\n\n  const N = 20; const plotHeight= 230;\n  const xLabels = useState(new Array(N).fill(0).map((_, i) => `${i}`))[0];\n  const yLabels = useState(new Array(N).fill(''))[0];\n  const xLabelsVisibility = new Array(N).fill(false);\n\n  // const shepardMatrix = (dist_orig, dist_emb) => {\n  //   let shepard_data = new Array(N).fill(0).map(() => new Array(N).fill(0));\n  //   let xmin=Math.min.apply(null, dist_orig); let xdel=Math.max.apply(null, dist_orig) - xmin + 1e-10; \n  //   let ymin=Math.min.apply(null, dist_emb); let ydel=Math.max.apply(null, dist_emb) - ymin + 1e-10; \n  //   let m,n;\n  //   for (let i=0; i<dist_emb.length; i++){\n  //     m = Math.floor((dist_orig[i]-xmin) / xdel * N);\n  //     n = Math.floor((dist_emb[i]-ymin) / ydel * N);\n  //     shepard_data[m][n] += 1;\n  //   }\n  //   return shepard_data;\n  // };\n  let matrix = [];\n  for (let i = 0; i < 20; i++) {\n    let current = []\n    for (let j = 0; j < 20; j++) {\n      current.push(distance_data[i + \"_\" + j])\n    }\n    matrix.push(current)\n  }\n  // console.log(shepardMatrix(dist_orig, dist_emb))\n\n  // const onClick = (x, y) => alert(`Clicked ${x}, ${y}.`)\n  \n  const cellStyle = (background, value, min, max, data, x, y) => ({\n    background: `rgb(25, 25, 112, ${1 - (max - value) / (max - min)})`,\n    fontSize: \"5px\",\n    color: \"#444\",\n    margin: 0\n  });\n\n  const cellRender = (value) => {}\n\n\n  useEffect(() => {\n\n\n    let shepardAxisSvg = d3.select(\"#shepard-axis\")\n    let xAxis = d3.axisBottom(d3.scaleLinear().domain([0, 1]).range([0, plotHeight]));\n\n    shepardAxisSvg.append(\"g\") \n                  .attr(\"transform\", `translate(30, ${plotHeight+30})`)\n                  .call(xAxis)\n    \n    let yAxis = d3.axisLeft(d3.scaleLinear().domain([0, 1]).range([plotHeight, 0]));\n\n\n    shepardAxisSvg.append(\"g\")\n                  .attr(\"transform\", \"translate(30,30)\")\n                  .call(yAxis)\n  }, [])\n\n  const shepardContainerStyle = {\n    margin: 'auto',\n    height:'280px'\n\n  };\n\n  \n\n\n  return (\n    <div name=\"heatmap\" className='Shepard' style={shepardContainerStyle}>\n      <div style={{textAlign:'center', height:'25px', fontSize:'16px', fontWeight:'600'}}>\n                    Shepard Diagram</div>\n      \n      <svg id={\"shepard-axis\"} style={{position: 'absolute'}} \n        transform={\"translate(-30, -30)\"} height={280} width={280}> \n      </svg>\n      <div>\n        <HeatMap name=\"plot\"\n          // background={\"#329fff\"}\n          xLabels={xLabels}\n          yLabels={yLabels}\n          xLabelsLocation={\"bottom\"} xLabelsVisibility={xLabelsVisibility}\n          xLabelWidth={0} yLabelWidth={0}\n          data={matrix}\n          // onClick={onClick}\n          squares={true}\n          height={plotHeight/N}\n          cellStyle={cellStyle}\n          cellRender={cellRender}\n      />\n      </div>\n      \n    </div>\n  );\n\n\n};\n\n\nexport default ShepardDiagram;","import React from 'react';\nimport { Chart } from \"react-charts\";\nimport parse from 'html-react-parser';\nimport * as d3 from 'd3';\n\n\nconst BarChart = (props) => {\n  let jsonFileName = props.dataset + \"_\" + props.method;\n  const option = props.option\n  const threshold = props.threshold;\n\n  function countLabel(df, d) {\n    let count = 0;\n    for (let i in df){ if (d === df[i]) count++;}\n    return count;\n  };\n  function sumLabel(df_label, df_value, target_label) {\n    let sum = 0;\n    if (df_value === NaN){\n      for (let i in df_label){ \n        if (df_label[i] === target_label) sum += parseFloat(df_value[i]);\n      }\n    }else{\n      for (let i in df_label){ \n        if (df_label[i] === target_label & df_value[i] > threshold) sum += parseFloat(df_value[i]);\n      }\n    }\n    return sum;\n  };\n\n  let data;\n  let point_data = require(\"../json/\" + jsonFileName + \"_points.json\");\n  let label_data = point_data.map((d) => d.label.toString());\n  let trust_data = point_data.map((d) => d.trust.toString());\n  let cont_data = point_data.map((d) => d.cont.toString());\n  const label_list = Array.from(new Set(label_data)).sort((a,b)=> a - b);\n\n  if (option==='count'){\n    data = label_list.map((d) => { \n      return {\n        label: d,\n        data: [\n          {x:\"All\", y: countLabel(label_data, d)}, \n          {x:\"Missing\", y: countLabel(label_data.filter(e => cont_data[e] > threshold), d)}, \n          {x:\"False\", y: countLabel(label_data.filter(e => trust_data[e] > threshold), d)},\n        ]};\n    });\n  }\n  else{ // if option === \"sum\"\n    data = label_list.map((d) => { \n      return {\n        label: d,\n        data: [\n          {x: \"All\", y: 0.0}, \n          {x: \"Missing\", y: sumLabel(label_data, cont_data, d)}, \n          {x: \"False\", y: sumLabel(label_data, trust_data, d)},\n        ]};\n    });\n  }\n\n\n\n\n\n\n  const [{ activeSeriesIndex, activeDatumIndex }, setState] = React.useState({\n    activeSeriesIndex: -1,\n    activeDatumIndex: -1\n  });\n\n  const series = React.useMemo(\n    () => ({\n      type: \"bar\"\n    }),\n    [\"bar\"]\n  );\n\n  const axes = React.useMemo(\n    () => [\n      { primary: true, type: \"ordinal\", position: \"bottom\"},\n      { type: \"linear\", position: \"left\", stacked: false, show: false, hardMin:0}\n    ],\n    []\n  );\n\n  const getSeriesStyle = React.useCallback(\n    series => ({\n      color: `url(#${series.index % label_list.length})`,\n      opacity:\n        activeSeriesIndex > -1\n          ? series.index === activeSeriesIndex\n            ? 1\n            : 0.3\n          : 1\n    }),\n    [activeSeriesIndex]\n  );\n\n  const getDatumStyle = React.useCallback(\n    datum => ({\n      r:\n        activeDatumIndex === datum.index && activeSeriesIndex === datum.seriesIndex\n          ? 7\n          : activeDatumIndex === datum.index\n          ? 5\n          : datum.series.index === activeSeriesIndex\n          ? 3\n          : datum.otherHovered\n          ? 2\n          : 2\n    }),\n    [activeDatumIndex, activeSeriesIndex]\n  );\n\n  const onFocus = React.useCallback(\n    focused =>\n      setState({\n        activeSeriesIndex: focused ? focused.series.id : -1,\n        activeDatumIndex: focused ? focused.index : -1\n      }),\n    [setState]\n  );\n\n  const colorScale = d3.scaleOrdinal(d3.schemeSpectral[label_list.length]);\n  function renderSVG() {\n    let txt = \"<defs>\";\n    for (let i=0; i<label_list.length; i++){\n      txt += `<linearGradient id=\"${label_list[i]}\">`\n            + `<stop stop-color=\"${colorScale(i)}\"/>`\n            + \"</linearGradient>\";\n    }\n    txt += \"</defs>\"\n    return parse(txt);\n  }\n\n\n  return (\n    <div name=\"labelplot\" className='BarChart'>\n      <Chart data={data} series={series} axes={axes} tooltip \n        getSeriesStyle={getSeriesStyle}\n        getDatumStyle={getDatumStyle}\n        onFocus={onFocus}\n        setState={setState}\n        activeDatumIndex={activeDatumIndex}\n        activeSeriesIndex={activeSeriesIndex}\n        renderSVG = {renderSVG}\n      />\n    </div>\n  );\n\n\n};\n\n\n\nexport default BarChart;","import React, { useState, useEffect } from 'react'\nimport * as d3 from 'd3';\nimport { svg } from 'd3';\n\nconst CompareViewComponent = (props) => {\n\n    let jsonFileName = props.dataset + \"_\" + props.method;\n    let pointsData = require(\"../json/\" + jsonFileName + \"_points.json\");\n    // console.log(pointsData);\n    const colorScale = props.colorScale\n\n    const radius = 1;\n\n    let width = props.width\n    let height = props.height\n    const margin = { hor: 20, ver: 20 };\n\n    const [minX, maxX] = d3.extent(pointsData, d => d.coor[0]);\n    const [minY, maxY] = d3.extent(pointsData, d => d.coor[1]);\n\n    const xScale = d3.scaleLinear()\n                        .domain([minX, maxX])\n                        .range([0, width]);\n    \n    const yScale = d3.scaleLinear()\n                        .domain([minY, maxY])\n                        .range([0, height]);\n    \n    let compareSvg;\n    \n    let compareSvgPoints;\n    let svgSelectedPoints;\n    let svgHeighlightedPoints;\n\n        // changeMainMethod\n    function changeMainMethod() {\n\n        // console.log(props.setMainMethod(\"hi\"));\n        // props.setMainMethod(props.method);\n        console.log(props);\n        props.setMainMethod(props.method)\n        \n\n    }\n\n    \n\n    useEffect(() => {\n        compareSvg = d3.select(\"#\" + props.method+ \"_compare\")\n                            .attr(\"width\", width + margin.hor * 2)\n                            .attr(\"height\", height + margin.ver * 3);\n        \n        compareSvgPoints = compareSvg.append(\"g\")\n                                     .attr(\"id\", props.method+ \"_compare_points\")\n                                     .attr(\"transform\", \"translate(\" + margin.hor + \", \" + (margin.ver * 2) + \")\");\n        svgSelectedPoints = compareSvg.append(\"g\")\n                                      .attr(\"id\", props.method+ \"_compare_selected\")\n                                      .attr(\"transform\", \"translate(\" + margin.hor + \", \" + (margin.ver * 2) + \")\");\n        svgHeighlightedPoints = compareSvg.append(\"g\")\n                                          .attr(\"id\", props.method+ \"_compare_highlighted\")\n                                          .attr(\"transform\", \"translate(\" + margin.hor + \", \" + (margin.ver * 2) + \")\");\n        compareSvgPoints.selectAll(\"circle\")\n                        .data(pointsData)\n                        .join(\n                            enter => enter.append(\"circle\")\n                                        .attr(\"fill\", d => colorScale(d.label))\n                                        .style(\"opacity\", 0.4)\n                                        .attr(\"r\", radius)\n                                        .attr(\"cx\", d => xScale(d.coor[0]))\n                                        .attr(\"cy\", d => yScale(d.coor[1]))\n\n                        );\n\n        compareSvg.append(\"g\")\n                  .append(\"text\")\n                  .text(props.method.toUpperCase())\n                  .attr(\"font-size\", 13)\n                  .attr(\"font-weight\", 600)\n                  .attr(\"y\", 30)\n                  .attr(\"x\", 10)\n\n        d3.select(\"#\" + props.method + \"_compare\")\n            .on(\"mouseenter\", function() {\n                d3.select(this).append(\"rect\")\n                .attr(\"id\", \"select_rect_\" + props.method)\n                    .attr(\"fill\", \"none\")\n                    .attr(\"stroke\", \"black\")\n                    .attr(\"stroke-width\", 1)\n                    .attr(\"width\", props.width + margin.hor * 2)\n                    .attr(\"height\", props.width + margin.ver * 2.5)\n                    .attr(\"transform\", \"translate(0,\" + margin.ver * 0.5 + \")\")\n\n                let selection = d3.select(this)\n                  .append(\"g\")\n                  .attr(\"id\", \"select_\" + props.method);\n                selection.append(\"rect\")\n                  .attr(\"id\", \"rect_\" + props.method)\n                  .attr(\"transform\", \"translate(\" + (10) + \",\" + (props.height + 20) + \")\")\n                  .attr(\"width\", 160)\n                  .attr(\"height\", 30)\n                  .attr(\"rx\", 7)\n                  .attr(\"ry\", 7)\n                  .style(\"stroke\", \"black\")\n                  .attr(\"fill\", \"#eeeeee\")\n                selection\n                  .on(\"mouseenter\", function() {\n                      d3.select(\"#rect_\" + props.method)\n                        .style(\"stroke-wdith\", 2)\n                        .attr(\"fill\", \"#bbbbbb\")\n                  })\n                  .on(\"mouseleave\", function() {\n                    d3.select(\"#rect_\" + props.method)\n                      .style(\"stroke-wdith\", 1)\n                      .attr(\"fill\", \"#eeeeee\")\n                  })\n                  .on(\"mousedown\", function() {\n                      d3.select(\"#rect_\" + props.method)\n                      .style(\"stroke-wdith\", 1)\n                      .attr(\"fill\", \"#eeeeee\")\n                  })\n                  .on(\"mouseup\", function() {\n                    d3.select(\"#rect_\" + props.method)\n                      .style(\"stroke-wdith\", 2)\n                      .attr(\"fill\", \"#bbbbbb\")\n                  })\n                  .on(\"click\", function() {\n                      changeMainMethod();\n                  });\n\n                selection.append(\"text\")\n                         .attr(\"id\", \"text_\" + props.method)\n                         .attr(\"font-size\", 13)\n                         .attr(\"font-weight\", 300)\n                         .attr(\"transform\", \"translate(\" + (15) + \",\" + (props.height + margin.ver * 2) + \")\")\n                         .text(\"Set as Main Projection!!\")\n                         .style(\"user-select\", \"none\")\n\n                \n                // console.log(d3.select(\"#\" + props.method + \"compare_div\"))\n                // d3.select(this)\n                //   .append(\"button\")\n                //   .text(\"Set as Main Projection!!\")\n                //   .style(\"display\", \"block\")\n                //   .style(\"position\", \"relative\")\n                //   .style(\"top\", \"-30px\")\n                //   .style(\"left\", \"6px\")\n                //   .attr(\"onclick\", \"changeMainMethod()\")\n            })\n            .on(\"mouseleave\", function() {\n                d3.select(this).select(\"#select_rect_\" + props.method).remove();\n                d3.select(this).select(\"#select_\" + props.method).remove();\n\n                // d3.select(this)\n                //   .select(\"button\").remove();\n\n            })\n    }, [])\n\n    useEffect(() => {\n\n\n\n        if(props.update) {   // if new selection\n            d3.select(\"#\" + props.method+ \"_compare_selected\").selectAll(\"circle\")\n                             .data(props.points)\n                             .enter()\n                             .append(\"circle\")\n                             .attr(\"fill\", \"blue\")\n                             .attr(\"r\", radius *1.5)\n                             .attr(\"cx\", i => xScale(pointsData[i].coor[0]))\n                             .attr(\"cy\", i => yScale(pointsData[i].coor[1]));\n\n            d3.select(\"#\" + props.method+ \"_compare_highlighted\").selectAll(\"circle\")\n              .data(Object.keys(props.missingPoints))\n              .enter()\n              .append(\"circle\")\n              .attr(\"fill\", \"red\")\n              .attr(\"r\", radius * 2)\n              .attr(\"cx\", i => xScale(pointsData[i].coor[0]))\n              .attr(\"cy\", i => yScale(pointsData[i].coor[1]))\n              .style(\"opacity\", i => props.missingPoints[i])\n\n            \n        }\n        else {\n            d3.select(\"#\" + props.method+ \"_compare_selected\").selectAll(\"circle\").remove()\n            d3.select(\"#\" + props.method+ \"_compare_highlighted\").selectAll(\"circle\").remove()\n        }\n\n    }, [props.update])\n\n                                     \n    \n\n    \n\n\n\n    return (\n        <div id={props.method + \"_compare_div\"} style={{height: \"265px\"}}>\n            <svg id={props.method + \"_compare\"}>\n\n            </svg>\n        </div>\n    )\n}\n\nexport default CompareViewComponent;","import React, { useState, useEffect } from 'react'\n\nimport CompareViewComponent from './Compare-Component'\n\n\nconst CompareView = (props) => {\n\n    // LLE 추가하면 restore해야함 TODOTODOTODO\n    // const methods  = props.methods.filter(d => d !== props.main_method)\n    const methods = props.methods;\n\n    const compareWidth = 200;\n    const compareHeight = 200;\n\n    useEffect(() => {\n        // console.log(props.points);\n        // console.log(methods);\n    }, [props.update])\n\n\n    let titleStyle = {\n        \"marginTop\": 14,\n        \"fontWeight\": 600\n    }\n\n    let divStyle = {\n        \"paddingLeft\": 17\n    }\n\n    return (\n        <div style={divStyle}>\n            <div style={titleStyle}>Compare View</div>\n            <div style={{display: \"flex\"}}>\n            {methods.slice(0,2).map((method, i) => (\n                <CompareViewComponent\n                    method = {method}\n                    dataset = {props.dataset}\n                    points = {props.points}\n                    update = {props.update}\n                    width = {compareWidth}\n                    height = {compareHeight}\n                    colorScale = {props.colorScale}\n                    missingPoints = {props.missingPoints}\n                    setMainMethod = {props.setMainMethod}\n                />\n            ))}\n            </div>\n            <div style={{display: \"flex\"}}>\n            {methods.slice(2,4).map((method, i) => (\n                <CompareViewComponent\n                    method = {method}\n                    dataset = {props.dataset}\n                    points = {props.points}\n                    update = {props.update}\n                    width = {compareWidth}\n                    height = {compareHeight}\n                    colorScale = {props.colorScale}\n                    missingPoints = {props.missingPoints}\n                    setMainMethod = {props.setMainMethod}\n                />\n            ))}\n            </div>\n        </div>\n    )\n\n}\n\nexport default CompareView;","import React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport { color, precisionPrefix } from 'd3';\nimport inside from 'point-in-polygon'\nimport ShepardDiagram from './Detail-Shepard';\nimport BarChart from './Detail-BarChart';\nimport CompareView from \"./CompareView\";\nimport BottomBarChart from './Bottom-BarChart';\n\nconst ExplorerNew = (props) => {\n\n    let jsonFileName = props.dataset + \"_\" + props.method;\n    let pointsData = require(\"../json/\" + jsonFileName + \"_points.json\");\n    let edgesData = require(\"../json/\" + jsonFileName + \"_edges.json\");\n    let missingPointsData = require(\"../json/\" + jsonFileName + \"_missing_points.json\")\n    const label_data = Array.from(new Set(pointsData.map((d) => d.label))).sort((a,b)=> a - b);\n    // pointsData = pointsData.map((d, i) => {\n    //     return {\n    //         coor: d.coor,\n    //         lable: d.label,\n    //         idx: i\n    //     };\n    // });\n\n    let knnData = edgesData.reduce(function(acc, val) {\n        if (val.start in acc) acc[val.start].push(val.end);\n        else                  acc[val.start] = [val.end];\n        if (val.end in acc)   acc[val.end].push(val.start);\n        else                  acc[val.end] = [val.start];\n        return acc;\n    }, {})\n\n    // console.log(pointsData, edgesData, missingPointsData, knnData) \n\n    const width = 800;\n    const height = 800;\n    // const margin = { hor: width / 40, ver: height / 40 };\n    const margin = { hor: 15, ver: 15 };\n\n    const [minX, maxX] = d3.extent(pointsData, d => d.coor[0]);\n    const [minY, maxY] = d3.extent(pointsData, d => d.coor[1]);\n\n    const xScale = d3.scaleLinear()\n                        .domain([minX, maxX])\n                        .range([0, width]);\n    \n    const yScale = d3.scaleLinear()\n                        .domain([minY, maxY])\n                        .range([0, height]);\n\n    const ratio = 0.38;\n\n\n    let svgContour, svgContourPoints;\n    let svgMainView, gMainView, svgMiniMap, gBrush;\n\n    let miniContourPoints;\n\n    let pointSelection;\n\n    const radius = props.radius;\n    const strokeWidth = props.stroke;\n\n\n\n    let colorScale = d3.scaleOrdinal(d3.schemeCategory10);\n\n    const [update, setUpdate] = useState();\n    const [pointsIn, setPointsIn] = useState([]);\n    const [missingPointsIn, setMissingPointsIn] = useState([]);\n    const isSelecting = useRef(false);\n    const isMakingContour = useRef(false);\n    let contour = useRef([]);\n\n\n    let svgs;\n\n\n    function pointsInPolygon(polygon) {\n\n        \n        let scale = getTransformValue()[0];\n\n        polygon = polygon.map(d => [xScale.invert(d[0] - margin.hor / scale), yScale.invert(d[1] - margin.ver / scale)]);\n        let pointsInPolygon = pointsData.reduce(function(acc, val, i){\n            if (inside(val.coor, polygon)) acc.push(i);\n            return acc;\n        }, []);\n        return pointsInPolygon;\n    }\n\n    function getMissingEdgesInfo(missingPointsDict) {\n        let missingPointsList = Object.keys(missingPointsDict);\n        let edges = missingPointsList.reduce(function(acc, val) {\n            let adjacentPoints = knnData[val.toString()]\n            if (adjacentPoints === undefined) return acc;\n            adjacentPoints.forEach(adjacentPoint => {\n                if(parseInt(adjacentPoint) in missingPointsDict) {\n                    let keyStr = parseInt(adjacentPoint) < val ? \n                                adjacentPoint  + \"_\" + val.toString() : \n                                val.toString() + \"_\" + adjacentPoint;\n                    acc.push(keyStr);\n                }\n            });\n            return acc;\n        }, []);\n        edges = Array.from(new Set(edges));\n        edges = edges.map(d => {\n            const incidentPoints = d.split(\"_\");\n            return [parseInt(incidentPoints[0]), parseInt(incidentPoints[1])];\n        })\n        return edges;\n    }\n\n    const drawPlot = (ratio, prefix) => {\n        svgs = d3.select(`#${prefix}_${props.dataset}_${props.method}`)\n        .attr(\"width\", ratio * (width + margin.hor * 2))\n        .attr(\"height\", ratio * (height + margin.ver * 2));\n\n\n        svgs.append(\"rect\")\n            .attr(\"width\", ratio * (width + margin.hor * 2))\n            .attr(\"height\", ratio * (height  + margin.ver * 2))\n            .style(\"fill-opacity\", 1)\n            .style(\"fill\", \"white\");\n            // .style(\"stroke\", \"black\")\n            // .style(\"stroke-width\", 2)\n\n        let svg = svgs.append(\"g\")\n            .attr(\"id\", `${prefix}_g_${props.dataset}_${props.method}`)\n            .attr(\"transform\", `translate(${ratio * margin.hor}, ${ratio * margin.ver})`);\n\n        let svgEdges = svg.append(\"g\")\n                        .attr(\"id\", `${prefix}_edge_g_${props.dataset}_${props.method}`);\n\n        let svgContour = svg.append(\"g\")\n                        .attr(\"id\", `${prefix}_contour_g_${props.dataset}_${props.method}`);\n            \n        let svgContourPoints = svg.append(\"g\")\n                        .attr(\"id\", `${prefix}_contour_point_g_${props.dataset}_${props.method}`);\n\n\n        let svgPoints = svg.append(\"g\")\n                        .attr(\"id\", `${prefix}_circle_g_${props.dataset}_${props.method}`);\n\n        let svgMissingEdges = svg.append(\"g\")\n                        .attr(\"id\", `${prefix}_missing_edge_g_${props.dataset}_${props.method}`);\n        \n                        //points\n        svgPoints.selectAll(\"circle\")\n                        .data(pointsData)\n                         .join(\n                             enter => {\n                                 enter.append(\"circle\")\n                                     .attr(\"class\", (d,i) => \"circle\" + i.toString())\n                                     .attr(\"fill\", d => {\n                                         if (props.isLabel) return colorScale(d.label);\n                                         else return \"black\"; \n                                     })\n                                     .attr(\"cx\", d => ratio * xScale(d.coor[0]))\n                                     .attr(\"cy\", d => ratio * yScale(d.coor[1]))\n                                     .style(\"opacity\", 0.8)\n                                     .attr(\"r\", radius * ratio)\n                             }\n                         );\n        \n                         // edges\n        function scaleBivariate(first, second) {\n                        let lScale = d3.scaleLinear().domain([0, 2]).range([100, 30])\n                        let aScale = d3.scaleLinear().domain([1, -1]).range([30, -30])\n                        let bScale = d3.scaleLinear().domain([1, -1]).range([20, -20])\n            \n                        return d3.color(d3.lab(lScale(first + second), aScale(first - second), bScale(second-first)))\n                    };\n\n        svgEdges.selectAll(\"path\")\n                    .data(edgesData)\n                    .join(\n                        enter => {\n                            enter.append(\"path\")\n                                 .attr(\"fill\", \"none\")\n                                 .attr(\"stroke-width\", strokeWidth * ratio)\n                                 .attr(\"stroke\", d => {\n                                     if (props.showMissing && props.showFalse) return scaleBivariate(d.false_val, d.missing_val);\n                                     else return \"black\";\n                                 })\n                                 .attr(\"d\", d => {\n                                    return d3.line()\n                                             .x(datum => ratio * xScale(pointsData[datum].coor[0]))\n                                             .y(datum => ratio * yScale(pointsData[datum].coor[1]))\n                                             ([d.start, d.end])\n                                 });\n                        }\n                    );\n\n\n    }\n    const getTransformValue = () => {\n        const trans = gMainView.attr('transform');\n        const tmp = trans.split(\"translate(\")[1].split(\",\");\n\n        if (tmp[1].includes(\"scale\")){\n            return [parseFloat(tmp[1].split(\"scale(\")[1]),\n                    parseFloat(tmp[0]),\n                    parseFloat(tmp[1])];\n        }\n        else return [1.0,parseFloat(tmp[0]),parseFloat(tmp[1])];\n\n    }\n\n    function Brushing({selection}) {\n        let scale = getTransformValue()[0];\n        \n        if (selection){\n              let [x0, y0] = selection[0];\n              let moveX = margin.hor * scale - x0 * scale / ratio;\n              let moveY = margin.ver * scale - y0 * scale / ratio;\n              gMainView.attr('transform', `translate(${moveX}, ${moveY}) scale(${scale})`);\n          }\n      }\n\n    const brush = d3.brush()\n                      .extent([[0,0], [ratio * (width + 2 * margin.hor) ,ratio * (height + 2 * margin.ver)]])\n                      .on('brush', Brushing);\n\n    const drag = (e) => { // 매우느림\n\n        const dragX = (e.subject.x - e.x) * 0.05;\n      const dragY = (e.subject.y - e.y) * 0.05;\n      const [scale, transX, transY] = getTransformValue();\n      const moveX = d3.max([d3.min([transX - dragX, margin.hor * scale]),(30 / scale) - (scale - 1.0) * width]);\n      const moveY = d3.max([d3.min([transY - dragY, margin.ver * scale]),(30 / scale) - (scale - 1.0) * height]);\n      gMainView.attr('transform', `translate(${moveX}, ${moveY}) scale(${scale})`);\n    \n    brush.move(gBrush, [\n        [(margin.hor * scale - moveX) * ratio / scale, (margin.ver * scale - moveY) * ratio / scale],\n        [(margin.hor * scale - moveX) * ratio / scale + (width + 2 * margin.hor) * ratio / scale,\n        (margin.ver * scale - moveY) * ratio / scale + (height + 2 * margin.ver) * ratio / scale],\n    ])\n\n    }\n\n    \n\n    useEffect(() => {\n\n\n        // d3.select(\"\")\n        console.log(d3.select(`#scatterplot_${props.dataset}_${props.method}`))\n        d3.select(`#scatterplot_${props.dataset}_${props.method}`).selectAll(\"g\").remove();\n        d3.select(`#minimap_${props.dataset}_${props.method}`).selectAll(\"g\").remove();\n        setUpdate(() => false);\n        // if(svgs !== undefined) {\n        //     console.log(\"remove\")\n        //     svgs.selectAll(\"g\").remove();\n        // }\n\n        console.log('useEffect1')\n\n        drawPlot(1.0, \"scatterplot\");\n        drawPlot(ratio, \"minimap\");\n        svgContour = d3.select(`#scatterplot_contour_g_${props.dataset}_${props.method}`);\n        svgContourPoints = d3.select(`#scatterplot_contour_point_g_${props.dataset}_${props.method}`);\n        miniContourPoints = d3.select(`#minimap_contour_point_g_${props.dataset}_${props.method}`);\n        \n        function renderMissingEdges(edges, missingPointsDict) {\n            d3.select(`#scatterplot_missing_edge_g_${props.dataset}_${props.method}`)\n                    .selectAll(\"path\")\n                          .data(edges)\n                          .enter()\n                          .append(\"path\")\n                          .attr(\"fill\", \"none\")\n                          .attr(\"stroke-width\", strokeWidth)\n                          .attr(\"stroke\", \"red\")\n                          .attr(\"d\", d => {\n                              return d3.line()\n                                      .x(datum => xScale(pointsData[datum].coor[0]))\n                                      .y(datum => yScale(pointsData[datum].coor[1]))\n                                      (d);\n                          })\n                          .style(\"opacity\", d => {\n                              return (missingPointsDict[d[0]] + missingPointsDict[d[1]]) / 2\n                          });\n\n\n            d3.select(`#minimap_missing_edge_g_${props.dataset}_${props.method}`)\n                          .selectAll(\"path\")\n                                .data(edges)\n                                .enter()\n                                .append(\"path\")\n                                .attr(\"fill\", \"none\")\n                                .attr(\"stroke-width\", strokeWidth * ratio)\n                                .attr(\"stroke\", \"red\")\n                                .attr(\"d\", d => {\n                                    return d3.line()\n                                            .x(datum => ratio * xScale(pointsData[datum].coor[0]))\n                                            .y(datum => ratio * yScale(pointsData[datum].coor[1]))\n                                            (d);\n                                })\n                                .style(\"opacity\", d => {\n                                    return (missingPointsDict[d[0]] + missingPointsDict[d[1]]) / 2\n                                });\n        }\n\n        const finalPointSelection = () => {\n            \n            let points = pointsInPolygon(contour.current);\n            \n            svgContourPoints.selectAll(\"circle\")\n                    .data(points)\n                    .enter()\n                    .append(\"circle\")\n                    .attr(\"r\", radius * 2)\n                    .attr(\"cx\", d => \n                        xScale(pointsData[d].coor[0]))\n                    .attr(\"cy\", d => yScale(pointsData[d].coor[1]))\n                    .attr(\"fill\", \"blue\");\n\n            miniContourPoints.selectAll(\"circle\")\n                    .data(points)\n                    .enter()\n                    .append(\"circle\")\n                    .attr(\"r\", radius * 2 * ratio)\n                    .attr(\"cx\", d => ratio * xScale(pointsData[d].coor[0]))\n                    .attr(\"cy\", d => ratio * yScale(pointsData[d].coor[1]))\n                    .attr(\"fill\", \"blue\");\n        \n            let missingPointsDict = points.reduce(function(acc, val) {\n                let currentDict = missingPointsData[val];\n                Object.keys(currentDict).forEach(key => {\n                    if (key in acc) acc[key] += currentDict[key];\n                    else            acc[key] =  currentDict[key];\n                });\n                return acc;\n            }, {})\n            \n\n            let listLen = points.length;\n            Object.keys(missingPointsDict).forEach(d => {\n                missingPointsDict[d] /= listLen;\n            })\n            let edges = getMissingEdgesInfo(missingPointsDict);\n            renderMissingEdges(edges, missingPointsDict);\n\n            setMissingPointsIn(() => missingPointsDict);\n            setPointsIn(() => points);\n            setUpdate(() => true);\n        }\n\n        pointSelection = d3.select(`#scatterplot_g_${props.dataset}_${props.method}`)\n                        .append(\"rect\")\n                        .attr(\"width\", width + margin.hor * 2)\n                        .attr(\"height\", height  + margin.ver * 2)\n                        .attr(\"transform\", \"translate(-\" + margin.hor + \", -\" + margin.ver + \")\")\n                        .style(\"fill-opacity\", 0)\n                        .on(\"click\", function(event) {\n                            if(!isSelecting.current) {\n                                \n                                const [scale, transX, transY] = getTransformValue();\n                                const realX = (event.offsetX - transX + margin.hor) / scale;\n                                const realY = (event.offsetY - transY + margin.hor) / scale;\n                                \n                                if(!isMakingContour.current) {\n                                    // 새 점\n                                    isMakingContour.current = true;\n                                    // contour.current.push([event.offsetX, event.offsetY])\n                                    contour.current.push([realX, realY])\n                                    svgContour.append(\"path\")\n                                            .attr(\"id\", \"current_path\")\n                                            .attr(\"fill\", \"none\")\n                                            .attr(\"stroke\", \"blue\")\n                                            .attr(\"storke-width\", 1)\n                                            .attr(\"stroke-dasharray\", \"2 \");\n                                }\n                                else {\n                                    // 이미 시작점은 존재한 상태에서 새로운 점 그리는 중 \n                                    svgContour.select(\"#current_path\")\n                                            .attr(\"id\", \"\")\n                                            .attr(\"d\", () => {\n                                                let start, end;\n                                                if (Math.abs(realX - contour.current[0][0]) < 4 &&\n                                                    Math.abs(realY - contour.current[0][1]) < 4) {\n                                                        start = contour.current[contour.current.length - 1];\n                                                        end = contour.current[0];\n                                                        isSelecting.current = true;\n                                                        isMakingContour.current = false; // finish making contour\n                                                    }\n                                                else {\n                                                    contour.current.push([realX, realY])\n                                                    start = contour.current[contour.current.length - 2];\n                                                    end = contour.current[contour.current.length - 1];\n                                                    svgContour.append(\"path\")\n                                                                .attr(\"id\", \"current_path\")\n                                                                .attr(\"fill\", \"none\")\n                                                                .attr(\"stroke\", \"blue\")\n                                                                .attr(\"storke-width\", 1)\n                                                                .attr(\"stroke-dasharray\", \"2 \");\n                                                }\n                                                \n                                                return d3.line()\n                                                            .x(datum => datum[0])\n                                                            .y(datum => datum[1])\n                                                            ([[start[0] - margin.hor / scale, start[1] - margin.ver / scale],[end[0] - margin.hor / scale, end[1] - margin.ver / scale]])\n                                            })\n                                    \n\n                                    if(isSelecting.current) { // finish making contour 마지막검에서 끝날때 \n                                        finalPointSelection();\n                                    }   \n                                }\n                                if(isMakingContour.current){\n\n                                    // 마지막합쳐질떄 제외하고 세 점을 만들어야 함.\n                                    \n                                    // console.log(event.offsetX, event.offsetY);\n                                    svgContour.append(\"circle\")\n                                            .attr(\"r\", 1.5)\n                                            .attr(\"cx\", realX - margin.hor / scale)\n                                            .attr(\"cy\", realY - margin.ver / scale)\n                                            .attr(\"fill\", \"none\")\n                                            .attr(\"stroke\", \"blue\")\n                                            .attr(\"stroke-width\", 1);\n                                }\n                            }\n                            else { // 이미 selection있을 경우\n                                // clearing\n                                // TODO : refresh\n\n                                contour.current = [];\n                                isSelecting.current = false;\n                                setUpdate(() => false);\n\n                                svgContour.selectAll(\"path\").remove();\n                                svgContour.selectAll(\"circle\").remove();\n                                svgContourPoints.selectAll(\"circle\").remove();\n                                miniContourPoints.selectAll(\"circle\").remove();\n                                d3.select(`#scatterplot_missing_edge_g_${props.dataset}_${props.method}`).selectAll(\"path\").remove();\n                                d3.select(`#minimap_missing_edge_g_${props.dataset}_${props.method}`).selectAll(\"path\").remove();\n\n                            }\n                        })\n                        .on(\"mousemove\", function(event) {\n                            svgContour.select(\"#current_path\")\n                                        .attr(\"d\",() =>{\n                                            const [scale, transX, transY] = getTransformValue();\n                                            const realX = (event.offsetX - transX + margin.hor) / scale;\n                                            const realY = (event.offsetY - transY + margin.ver) / scale;\n                                            let start = contour.current[contour.current.length - 1]\n                                            let end;\n                                            if (Math.abs(realX - contour.current[0][0]) < 4 &&\n                                                Math.abs(realY - contour.current[0][1]) < 4) \n                                                end = contour.current[0];\n                                            else end = [realX, realY]\n                                            return d3.line()\n                                                    .x(datum => datum[0])\n                                                    .y(datum => datum[1])\n                                                    ([[start[0] - margin.hor / scale, start[1] - margin.ver / scale],[end[0] - margin.hor / scale, end[1] - margin.ver / scale]])\n                                        })\n                                    })\n                        .on('dblclick', e => {\n                            svgContour.select(\"#current_path\")\n                                        .attr(\"d\", () => {\n                                            let start = contour.current[contour.current.length - 1];\n                                            let end = contour.current[0];\n                                            const scale = getTransformValue()[0];\n                                            return d3.line()\n                                                    .x(datum => datum[0])\n                                                    .y(datum => datum[1])\n                                                    ([[start[0] - margin.hor / scale, start[1] - margin.ver / scale],[end[0] - margin.hor / scale, end[1] - margin.ver / scale]])\n                                        })\n                                        .attr(\"id\", \"\")\n                                        .attr(\"d\", () => {\n                                            const scale = getTransformValue()[0];\n                                                let start, end;\n                                                start = contour.current[contour.current.length - 1];\n                                                end = contour.current[0];\n                                                isSelecting.current = true;\n                                                isMakingContour.current = false; // finish making contour\n                                                return d3.line()\n                                                            .x(datum => datum[0])\n                                                            .y(datum => datum[1])\n                                                            ([[start[0] - margin.hor / scale, start[1] - margin.ver / scale],[end[0] - margin.hor / scale, end[1] - margin.ver / scale]])\n                                            });\n\n                                            finalPointSelection();\n\n                        })\n                        .on(\"contextmenu\", e => {\n                            if (!isSelecting.current){\n                            e.preventDefault();\n                            // svgContour아래에 있는거 다 지우면 됨. \n                            // contour안에 있는거 지우고\n                            // \n                            contour.current = [];\n                            svgContour.select(\"#current_path\")\n                                        .attr(\"id\", \"\")\n\n                            svgContour.selectAll(\"*\").remove();\n\n                            isSelecting.current = false;\n                            isMakingContour.current = false;\n                            setUpdate(() => false);\n                            }\n                        });\n        \n\n        svgMainView = d3.select(\"#scatterplot_\" + props.dataset + \"_\" + props.method);\n        svgMainView.select(\"rect\").style(\"fill-opacity\", 0);\n        gMainView = d3.select(\"#scatterplot_g_\" + props.dataset + \"_\" + props.method);\n        \n\n        d3.select(`#scatterplot_circle_g_${props.dataset}_${props.method}`).selectAll(\"circle\")\n                            .data(pointsData)\n                            .join(enter => null, update => {\n                                update.on(\"mouseenter\", function() {\n                                    if(!isSelecting.current && !isMakingContour.current)\n                                       d3.select(this).attr(\"r\", radius * 3)\n                                })\n                                .on(\"mouseleave\", function() {\n                                    if(!isSelecting.current && !isMakingContour.current)\n                                       d3.select(this).attr(\"r\", radius)\n                                })\n                                .on(\"click\", function(e, d) {\n                                    if(!isSelecting.current && !isMakingContour.current){\n                                       isSelecting.current = true;\n                                       d3.select(this).attr(\"r\", radius * 5);\n                                       let missingPointsDict = missingPointsData[d.idx];\n                                       let edges = getMissingEdgesInfo(missingPointsDict)\n                                       renderMissingEdges(edges, missingPointsDict);\n                                    }\n                                });\n                                \n\n                            });\n\n        // minimap\n\n        d3.select(\"#minimap\").style(\"position\",\"fixed\");\n        svgMiniMap = d3.select(\"#minimap_\" + props.dataset + \"_\" + props.method)\n                        \n\n                        svgMainView.on('wheel', e => {\n                            let newScale, newTransX, newTransY;\n                            const {offsetX, offsetY, wheelDelta} = e;\n                            \n                            const [scale, transX, transY] = getTransformValue();\n                \n                            if (wheelDelta > 0){ // ZOOM IN\n                                if (scale < 5.0){\n                                    newScale = parseFloat(scale) + parseFloat(0.1);\n                                    newTransX = transX - 0.1 * (offsetX - transX) / scale;\n                                    newTransY = transY - 0.1 * (offsetY - transY) / scale;\n                                    gMainView.attr('transform', `translate(${newTransX.toFixed(3)}, ${newTransY.toFixed(3)}) scale(${newScale.toFixed(1)})`);\n                                    \n                                    brush.move(gBrush, [\n                                        [(margin.hor * newScale - newTransX) * ratio / newScale, (margin.ver * newScale - newTransY) * ratio / newScale],\n                                        [(margin.hor * newScale - newTransX) * ratio / newScale + (width + 2 * margin.hor) * ratio / newScale,\n                                         (margin.ver * newScale - newTransY) * ratio / newScale + (height + 2 * margin.ver) * ratio / newScale],\n                                    ]);\n                                }\n                            }\n                            else if (scale > 1.0){ // ZOOM OUT\n                                    newScale = parseFloat(scale) - parseFloat(0.1);\n                                    newTransX = transX + 0.1 * (offsetX - transX) / scale;\n                                    newTransY = transY + 0.1 * (offsetY - transY) / scale;\n                                    const moveX = d3.max([d3.min([newTransX, margin.hor * newScale]),(30 / newScale) - (newScale - 1.0) * width]);\n                                    const moveY = d3.max([d3.min([newTransY, margin.ver * newScale]),(30 / newScale) - (newScale - 1.0) * height]);\n                                    gMainView.attr('transform', `translate(${moveX.toFixed(3)}, ${moveY.toFixed(3)}) scale(${newScale.toFixed(1)})`);\n                \n                                    brush.move(gBrush, [\n                                        [(margin.hor * newScale - moveX) * ratio / newScale, (margin.ver * newScale - moveY) * ratio / newScale],\n                                        [(margin.hor * newScale - moveX) * ratio / newScale + (width + 2 * margin.hor) * ratio / newScale,\n                                         (margin.ver * newScale - moveY) * ratio / newScale + (height + 2 * margin.ver) * ratio / newScale],\n                                    ]);\n                            }\n                        });\n\n                svgMiniMap.on('wheel', e => {\n                    let newScale, newTransX, newTransY;\n                    const {offsetX, offsetY, wheelDelta} = e;\n                    \n                    const [scale, transX, transY] = getTransformValue();\n                    if (wheelDelta > 0){ // ZOOM IN\n                        if (scale < 5.0){\n                            newScale = parseFloat(scale) + parseFloat(0.1);\n                            newTransX = transX - 0.1 * (offsetX / ratio - transX) / scale;\n                            newTransY = transY - 0.1 * (offsetY / ratio- transY) / scale;\n                            gMainView.attr('transform', `translate(${newTransX.toFixed(3)}, ${newTransY.toFixed(3)}) scale(${newScale.toFixed(1)})`);\n                            \n                            brush.move(gBrush, [\n                                [(margin.hor * newScale - newTransX) * ratio / newScale, (margin.ver * newScale - newTransY) * ratio / newScale],\n                                [(margin.hor * newScale - newTransX) * ratio / newScale + (width + 2 * margin.hor) * ratio / newScale,\n                                 (margin.ver * newScale - newTransY) * ratio / newScale + (height + 2 * margin.ver) * ratio / newScale],\n                            ]);\n                        }\n                    }\n                    else if (scale > 1.0){ // ZOOM OUT\n                            newScale = parseFloat(scale) - parseFloat(0.1);\n                            newTransX = transX + 0.1 * (offsetX / ratio - transX) / scale;\n                            newTransY = transY + 0.1 * (offsetY / ratio- transY) / scale;\n                            const moveX = d3.max([d3.min([newTransX, margin.hor * newScale]),(30 / newScale) - (newScale - 1.0) * width]);\n                            const moveY = d3.max([d3.min([newTransY, margin.ver * newScale]),(30 / newScale) - (newScale - 1.0) * height]);\n                            gMainView.attr('transform', `translate(${moveX.toFixed(3)}, ${moveY.toFixed(3)}) scale(${newScale.toFixed(1)})`);\n        \n                            brush.move(gBrush, [\n                                [(margin.hor * newScale - moveX) * ratio / newScale, (margin.ver * newScale - moveY) * ratio / newScale],\n                                [(margin.hor * newScale - moveX) * ratio / newScale + (width + 2 * margin.hor) * ratio / newScale,\n                                 (margin.ver * newScale - moveY) * ratio / newScale + (height + 2 * margin.ver) * ratio / newScale],\n                            ]);\n                    }\n                });\n\n        svgMainView.call(\n            d3.drag()\n            .on(\"drag\",drag));\n\n        gBrush = svgMiniMap.append('g').attr('id', 'gBrush');\n\n        gBrush.call(brush);\n        brush.move(gBrush, [\n            [0,0],\n            [(width + 2 * margin.hor) * ratio, (height + 2 * margin.ver) * ratio]\n        ]);\n        \n        svgMiniMap.selectAll('.handle').remove();\n        svgMiniMap.selectAll('.overlay').remove();\n\n    }, [props.method]);\n   \n\n\n    return (\n        <div id=\"content\">\n            <div id=\"content-left\">\n                <div id=\"scatterplot\">\n                    <svg id={`scatterplot_${props.dataset}_${props.method}`}></svg>\n                </div>\n                <div id=\"detailview\">\n                    <BottomBarChart colorScale={colorScale} data={pointsData} update={update} points={pointsIn} label={label_data}/>\n                </div>\n            </div>\n            <div id=\"content-right\">\n\n\n                <CompareView\n                    main_method={props.method}\n                    methods={props.methods}\n                    dataset={props.dataset}\n                    update={update}\n                    points={pointsIn}\n                    data={pointsData}\n                    label={label_data}\n                    dataset={props.dataset}\n                    colorScale={colorScale}\n                    missingPoints={missingPointsIn}\n                    setMainMethod={props.setMainMethod}\n                />\n\n                <ShepardDiagram\n                    method={props.method}\n                    dataset={props.dataset} \n                />\n                <div style={{textAlign:'center', height:'25px', fontSize:'16px', paddingTop:'10px', fontWeight:'600'}}>\n                    Label Distribution</div>\n                <BarChart \n                    method={props.method}\n                    dataset={props.dataset}\n                    option={\"count\"}\n                    threshold={0.4}\n                />\n\n            </div>\n            \n            <div id=\"minimap\" style={{bottom:0, left:0}}>\n                <div className=\"minimap-title\">Minimap</div>\n                <svg id={`minimap_${props.dataset}_${props.method}`}></svg>\n            </div>\n            <div id=\"repoview\"></div>\n        </div>\n    );\n};\n\nexport default ExplorerNew;","import './App.css';\nimport React, { useState } from 'react'\n\nimport BasicInfoTab from './components/Left-BasicInfo';\nimport ControlTab from './components/Left-Control';\nimport ExplorerNew from './components/Explorer-new';\n\nfunction App() {\n\n  const methods = [\"pca\" , \"isomap\", \"tsne\", \"umap\"];\n  const [mainMethod, setMainMethod] = useState(\"pca\");\n\n  const embedding_parameters = {'param1': 111, 'param2': 222, 'param3': 222, 'param4': 222, 'param5': 222};\n\n  return (\n    <div className=\"App\">\n      <title>Embeding Explorer</title>\n      <div className=\"App-header\">\n        Distortion in Dimension Reduction\n      </div>\n      <div id=\"body\">\n        <div id=\"left-bar\">\n            <BasicInfoTab\n              method=\"pca\"\n              dataset=\"mnist_sampled_10\"\n              isLabel={true}\n              emb_params={embedding_parameters}\n            />\n            <ControlTab\n              method=\"pca\"\n              dataset=\"mnist_sampled_10\"\n              isLabel={true}\n              emb_params={embedding_parameters}\n            />\n        </div>\n          <ExplorerNew\n            methods={methods}\n            method={mainMethod}\n            dataset=\"mnist_sampled_10\"\n            isLabel={true}\n            showMissing={true}\n            showFalse={true}\n            radius={2.5}\n            stroke={3}\n            setMainMethod = {setMainMethod}\n          />\n      </div>\n      <footer/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport axios from 'axios';\r\n\r\naxios.defaults.xsrfCookieName = 'csrftoken'\r\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}